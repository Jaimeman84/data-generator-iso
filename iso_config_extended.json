{
  "MTI": {
    "name": "Message Type Indicator",
    "format": "fixed",
    "length": 4,
    "type": "numeric",
    "active": false,
    "SampleData": "0100",
    "notes": "Indicates the type of message being sent. Examples: 0100 - Auth Request, 0200 - Financial Transaction Request, 0420 - Reversal Request.",
    "testCases": {
      "invalid_type": {
        "value": "oDoP",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "-=[}",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "784",
        "description": "Length shorter than required 4 characters"
      },
      "invalid_length_long": {
        "value": "26538",
        "description": "Length longer than required 4 characters"
      }
    },
    "validationRules": {
      "exactLength": 4,
      "allowedChars": "0-9",
      "description": "Must be exactly 4 characters long with numeric characters"
    },
    "validExample": "1059"
  },
  "PrimaryBitmap": {
    "name": "Primary Bitmap",
    "format": "bitmap",
    "length": 64,
    "type": "hex",
    "active": false,
    "SampleData": "A1B2C3D4E5F6A7B8",
    "notes": "Each bit corresponds to a specific data element (1-64). If a bit is set to 1, the corresponding data element must be present. Presence of Secondary Bitmap is indicated by the first bit.",
    "testCases": {
      "invalid_type": {
        "value": "$WyP{XLyQpm-jVo[&Yv;+/(*++x:}kinom}OD*]gBr$oAPx>T*G-oWIzSH(mI;?\\",
        "description": "Contains non-hexadecimal characters"
      },
      "invalid_hex_chars": {
        "value": "KTLUTGHNQGUTKXYMWYVUTLNHXUGRGQVIMNLGMQPOJRUZNRVMMGJHKUQZYSNJXPIP",
        "description": "Contains invalid hexadecimal letters"
      },
      "invalid_bitmap_format": {
        "value": "UAktHcoft9sv2tmRmmPphJA4lQx6EyVvYEJX5amxj1kQOdOLxJCHvjts58BnqCc5",
        "description": "Invalid bitmap format"
      },
      "invalid_bitmap_length": {
        "value": "11101111111101000101001101111011011101000101001101011000",
        "description": "Invalid bitmap length"
      }
    }
  },
  "SecondaryBitmap": {
    "name": "Secondary Bitmap",
    "format": "bitmap",
    "length": 64,
    "type": "hex",
    "active": false,
    "SampleData": "B1B2C3D4E5F6A7B8",
    "notes": "Used if data elements 65-128 are present. The primary bitmap's first bit must be set to 1 if this is included.",
    "testCases": {
      "invalid_type": {
        "value": "U]{H^\"|Y=w.<\"Oz%N/Ns'U(Mtg!Js}VZ&Mh|KJ~*>+^gvxCI}nJM,<.Wm>k{n>]}",
        "description": "Contains non-hexadecimal characters"
      },
      "invalid_hex_chars": {
        "value": "ZIOLUHTZPVJYJQZMSSXMOKQQXXKSIJJUYLHJRWSGWNOVSKZLUWNTSWXQSRPGYMTR",
        "description": "Contains invalid hexadecimal letters"
      },
      "invalid_bitmap_format": {
        "value": "8rpDeXUsX2yVuV8baBaicyKZqbd9nONtg0AM1I0FrJrh8yXzosZ82hQcKoIyiZAw",
        "description": "Invalid bitmap format"
      },
      "invalid_bitmap_length": {
        "value": "00111100010000011010111000110010111110110011000101101000",
        "description": "Invalid bitmap length"
      }
    }
  },
  "2": {
    "name": "Primary Account Number (PAN)",
    "format": "llvar",
    "max_length": 19,
    "type": "numeric",
    "active": false,
    "SampleData": "5314451120000000",
    "notes": "Should be validated using Luhn's check (mod 10). Must be encrypted and tokenized if present. Required for manually entered PANs or when track data is not available.",
    "testCases": {
      "invalid_type": {
        "value": "ZhiqgNJOJRRirTtTpUr",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "[\";='\\}!#:`&,,<<~@^",
        "description": "Contains special characters"
      },
      "invalid_length_exceed_max": {
        "value": "77843180912665455846",
        "description": "Exceeds maximum length of 19 characters"
      },
      "invalid_length_indicator": {
        "value": "207167625104326179101",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "7167625104326179101",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "00",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 19,
      "lengthIndicatorSize": 2,
      "allowedChars": "0-9",
      "description": "Variable length up to 19 characters with llvar length indicator"
    },
    "validExample": "1499804690504504"
  },
  "3": {
    "name": "Processing Code",
    "format": "fixed",
    "length": 6,
    "type": "numeric",
    "active": false,
    "SampleData": "000000",
    "notes": "Defines transaction type and account information. Example: 000000 - Debit, 200000 - Credit (refund). First 2 digits indicate transaction type, next 2 indicate from account, and last 2 indicate to account.",
    "testCases": {
      "invalid_type": {
        "value": "qGIZmm",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "'@)<.}",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "43300",
        "description": "Length shorter than required 6 characters"
      },
      "invalid_length_long": {
        "value": "9197186",
        "description": "Length longer than required 6 characters"
      }
    },
    "validationRules": {
      "exactLength": 6,
      "allowedChars": "0-9",
      "description": "Must be exactly 6 characters long with numeric characters"
    },
    "validExample": "039587"
  },
  "4": {
    "name": "Amount, Transaction",
    "format": "fixed",
    "length": 12,
    "type": "numeric",
    "active": false,
    "SampleData": "000000020000",
    "notes": "Represents the transaction amount in fixed length, padded with zeros. Last 2 digits represent decimal places.",
    "testCases": {
      "invalid_type": {
        "value": "dqrlXhzxMuQY",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "/%}?<}@&/,?@",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "45727153410",
        "description": "Length shorter than required 12 characters"
      },
      "invalid_length_long": {
        "value": "6566719412394",
        "description": "Length longer than required 12 characters"
      }
    },
    "validationRules": {
      "exactLength": 12,
      "allowedChars": "0-9",
      "description": "Must be exactly 12 characters long with numeric characters"
    },
    "validExample": "878148633025"
  },
  "5": {
    "name": "Amount, Settlement",
    "format": "fixed",
    "length": 12,
    "type": "numeric",
    "active": false,
    "SampleData": "000000030000",
    "notes": "Required if the transaction and settlement currencies are different. Not applicable for domestic transactions.",
    "testCases": {
      "invalid_type": {
        "value": "VjJsTJjeBjEh",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": ");`\\<_``)'+^",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "58263951362",
        "description": "Length shorter than required 12 characters"
      },
      "invalid_length_long": {
        "value": "6702446717523",
        "description": "Length longer than required 12 characters"
      }
    },
    "validationRules": {
      "exactLength": 12,
      "allowedChars": "0-9",
      "description": "Must be exactly 12 characters long with numeric characters"
    },
    "validExample": "330398148544"
  },
  "6": {
    "name": "Amount, Cardholder Billing",
    "format": "fixed",
    "length": 12,
    "type": "numeric",
    "active": false,
    "SampleData": "000000040000",
    "notes": "Required if the cardholder and settlement currencies are different. Includes fees from MasterCard.",
    "testCases": {
      "invalid_type": {
        "value": "xikHIUbgsVug",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "{[~($]/\"-~\":",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "52314907925",
        "description": "Length shorter than required 12 characters"
      },
      "invalid_length_long": {
        "value": "1476850261564",
        "description": "Length longer than required 12 characters"
      }
    },
    "validationRules": {
      "exactLength": 12,
      "allowedChars": "0-9",
      "description": "Must be exactly 12 characters long with numeric characters"
    },
    "validExample": "012313747110"
  },
  "7": {
    "name": "Transmission Date and Time",
    "format": "fixed",
    "length": 10,
    "type": "numeric",
    "active": false,
    "SampleData": "0329150405",
    "notes": "Format: MMDDhhmmss. Must be a valid date and time expressed in GMT.",
    "testCases": {
      "invalid_type": {
        "value": "UMTdvCjBxY",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "@-}-+->\"?+",
        "description": "Contains special characters"
      },
      "invalid_datetime": {
        "value": "1335251060",
        "description": "Invalid date and time value"
      },
      "invalid_length_short": {
        "value": "062906861",
        "description": "Length shorter than required 10 characters"
      },
      "invalid_length_long": {
        "value": "43434047788",
        "description": "Length longer than required 10 characters"
      }
    },
    "validationRules": {
      "exactLength": 10,
      "allowedChars": "0-9",
      "description": "Must be exactly 10 characters long with numeric characters",
      "isDateTime": true,
      "format": "MMDDhhmmss"
    },
    "validExample": "0329150405"
  },
  "8": {
    "name": "Amount, Cardholder Billing Fee",
    "format": "fixed",
    "length": 8,
    "type": "numeric",
    "active": false,
    "SampleData": "01000000",
    "notes": "Required only if requested by the issuer. Not expected for domestic transactions.",
    "testCases": {
      "invalid_type": {
        "value": "IdXXlgEt",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "%\"@?>=$@",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "2191309",
        "description": "Length shorter than required 8 characters"
      },
      "invalid_length_long": {
        "value": "447922552",
        "description": "Length longer than required 8 characters"
      }
    },
    "validationRules": {
      "exactLength": 8,
      "allowedChars": "0-9",
      "description": "Must be exactly 8 characters long with numeric characters"
    },
    "validExample": "71830902"
  },
  "9": {
    "name": "Conversion Rate, Settlement",
    "format": "fixed",
    "length": 8,
    "type": "numeric",
    "active": false,
    "SampleData": "02000000",
    "notes": "Required if the transaction and settlement currencies are different. Not applicable for domestic transactions.",
    "testCases": {
      "invalid_type": {
        "value": "bXcFfFNs",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "]^\\)=\":/",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "0375519",
        "description": "Length shorter than required 8 characters"
      },
      "invalid_length_long": {
        "value": "214865426",
        "description": "Length longer than required 8 characters"
      }
    },
    "validationRules": {
      "exactLength": 8,
      "allowedChars": "0-9",
      "description": "Must be exactly 8 characters long with numeric characters"
    },
    "validExample": "07933214"
  },
  "10": {
    "name": "Conversion Rate, Cardholder Billing",
    "format": "fixed",
    "length": 8,
    "type": "numeric",
    "active": false,
    "SampleData": "03000000",
    "notes": "Required if the cardholder and settlement currencies are different. Not applicable for domestic transactions.",
    "testCases": {
      "invalid_type": {
        "value": "kVUjfyjy",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "(=/,[}:/",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "7890935",
        "description": "Length shorter than required 8 characters"
      },
      "invalid_length_long": {
        "value": "617543582",
        "description": "Length longer than required 8 characters"
      }
    },
    "validationRules": {
      "exactLength": 8,
      "allowedChars": "0-9",
      "description": "Must be exactly 8 characters long with numeric characters"
    },
    "validExample": "25906998"
  },
  "11": {
    "name": "System Trace Audit Number",
    "format": "fixed",
    "length": 6,
    "type": "numeric",
    "active": false,
    "SampleData": "130644",
    "notes": "Generated by the acquirer/merchant and ensures uniqueness for the day. Combined with other identifiers for global uniqueness.",
    "testCases": {
      "invalid_type": {
        "value": "eLsbVe",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "+|&]](",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "92430",
        "description": "Length shorter than required 6 characters"
      },
      "invalid_length_long": {
        "value": "8477181",
        "description": "Length longer than required 6 characters"
      }
    },
    "validationRules": {
      "exactLength": 6,
      "allowedChars": "0-9",
      "description": "Must be exactly 6 characters long with numeric characters"
    },
    "validExample": "437001"
  },
  "12": {
    "name": "Time, Local Transaction",
    "format": "fixed",
    "length": 6,
    "type": "numeric",
    "active": false,
    "SampleData": "150405",
    "notes": "Format: hhmmss. Must be a valid time. Checked against issuer's system time for variance.",
    "testCases": {
      "invalid_type": {
        "value": "IxrRNA",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "$@-?>^",
        "description": "Contains special characters"
      },
      "invalid_time": {
        "value": "251060",
        "description": "Invalid time value (invalid minutes)"
      },
      "invalid_length_short": {
        "value": "85321",
        "description": "Length shorter than required 6 characters"
      },
      "invalid_length_long": {
        "value": "6774758",
        "description": "Length longer than required 6 characters"
      }
    },
    "validationRules": {
      "exactLength": 6,
      "allowedChars": "0-9",
      "description": "Must be exactly 6 characters long with numeric characters",
      "isDateTime": true,
      "format": "hhmmss"
    },
    "validExample": "150405"
  },
  "13": {
    "name": "Date, Local Transaction",
    "format": "fixed",
    "length": 4,
    "type": "numeric",
    "active": false,
    "SampleData": "0329",
    "notes": "Format: MMDD. Must be a valid date. Checked against issuer's system time for variance.",
    "testCases": {
      "invalid_type": {
        "value": "fMQS",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "'%'.",
        "description": "Contains special characters"
      },
      "invalid_date": {
        "value": "1332",
        "description": "Invalid date value (invalid month)"
      },
      "invalid_length_short": {
        "value": "629",
        "description": "Length shorter than required 4 characters"
      },
      "invalid_length_long": {
        "value": "19931",
        "description": "Length longer than required 4 characters"
      }
    },
    "validationRules": {
      "exactLength": 4,
      "allowedChars": "0-9",
      "description": "Must be exactly 4 characters long with numeric characters",
      "isDateTime": true,
      "format": "MMDD"
    },
    "validExample": "0329"
  },
  "14": {
    "name": "Date, Expiration",
    "format": "fixed",
    "length": 4,
    "type": "numeric",
    "active": false,
    "SampleData": "0231",
    "notes": "Format: YYMM. Used along with DE 2 to validate the card.",
    "testCases": {
      "invalid_type": {
        "value": "CcDP",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "^}%@",
        "description": "Contains special characters"
      },
      "invalid_date": {
        "value": "1332",
        "description": "Invalid date value (invalid month)"
      },
      "invalid_length_short": {
        "value": "124",
        "description": "Length shorter than required 4 characters"
      },
      "invalid_length_long": {
        "value": "70709",
        "description": "Length longer than required 4 characters"
      }
    },
    "validationRules": {
      "exactLength": 4,
      "allowedChars": "0-9",
      "description": "Must be exactly 4 characters long with numeric characters",
      "isDateTime": true,
      "format": "MMDD"
    },
    "validExample": "0231"
  },
  "15": {
    "name": "Date, Settlement",
    "format": "fixed",
    "length": 4,
    "type": "numeric",
    "active": false,
    "SampleData": "0331",
    "notes": "Format: MMDD. Must be a valid date. Checked against issuer's system time for variance.",
    "testCases": {
      "invalid_type": {
        "value": "idYg",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "*$@/",
        "description": "Contains special characters"
      },
      "invalid_date": {
        "value": "1332",
        "description": "Invalid date value (invalid month)"
      },
      "invalid_length_short": {
        "value": "824",
        "description": "Length shorter than required 4 characters"
      },
      "invalid_length_long": {
        "value": "73463",
        "description": "Length longer than required 4 characters"
      }
    },
    "validationRules": {
      "exactLength": 4,
      "allowedChars": "0-9",
      "description": "Must be exactly 4 characters long with numeric characters",
      "isDateTime": true,
      "format": "MMDD"
    },
    "validExample": "0331"
  },
  "17": {
    "name": "Date, Capture",
    "format": "fixed",
    "length": 4,
    "type": "numeric",
    "active": false,
    "SampleData": "0431",
    "notes": "Required if requested by the issuer. Format: MMDD.",
    "testCases": {
      "invalid_type": {
        "value": "Qrxx",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "?|#|",
        "description": "Contains special characters"
      },
      "invalid_date": {
        "value": "1332",
        "description": "Invalid date value (invalid month)"
      },
      "invalid_length_short": {
        "value": "801",
        "description": "Length shorter than required 4 characters"
      },
      "invalid_length_long": {
        "value": "43061",
        "description": "Length longer than required 4 characters"
      }
    },
    "validationRules": {
      "exactLength": 4,
      "allowedChars": "0-9",
      "description": "Must be exactly 4 characters long with numeric characters",
      "isDateTime": true,
      "format": "MMDD"
    },
    "validExample": "0431"
  },
  "18": {
    "name": "Merchant Type",
    "format": "fixed",
    "length": 4,
    "type": "numeric",
    "active": false,
    "SampleData": "1313",
    "notes": "Validates against a list of accepted Merchant Category Codes (MCCs).",
    "testCases": {
      "invalid_type": {
        "value": "dTEL",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "`>/)",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "427",
        "description": "Length shorter than required 4 characters"
      },
      "invalid_length_long": {
        "value": "97460",
        "description": "Length longer than required 4 characters"
      }
    },
    "validationRules": {
      "exactLength": 4,
      "allowedChars": "0-9",
      "description": "Must be exactly 4 characters long with numeric characters"
    },
    "validExample": "7262"
  },
  "19": {
    "name": "Acquiring Institution Country Code",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "001",
    "notes": "Only received if acquirer and issuer are in different countries. Decline if received other than USA.",
    "testCases": {
      "invalid_type": {
        "value": "JCU",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "&]]",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "84",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "4303",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "587"
  },
  "20": {
    "name": "Primary Account Number (PAN) Extended Country Code",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "USA",
    "notes": "Required if DE 34 (PAN Extended) is sent. Not applicable for MVP.",
    "testCases": {
      "invalid_type": {
        "value": "vcT",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": ":_*",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "23",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "5387",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "855"
  },
  "21": {
    "name": "Forwarding Institution Country Code",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "001",
    "notes": "Only received if acquirer and issuer are in different countries. Decline if received other than USA.",
    "testCases": {
      "invalid_type": {
        "value": "uzr",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "%*!",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "65",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "5003",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "376"
  },
  "22": {
    "name": "Point-of-Service Entry Mode",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "002",
    "notes": "Indicates how card data was captured. Examples: 01X - Manual entry, 02X - Card swipe, 06X - Card swipe with PIN, 09X - eCommerce.",
    "testCases": {
      "invalid_type": {
        "value": "JKx",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "^!|",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "87",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "3860",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "067"
  },
  "23": {
    "name": "Card Sequence Number",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "022",
    "notes": "Sent only if track data is not sent for POS transactions and one PAN has multiple cards.",
    "testCases": {
      "invalid_type": {
        "value": "MdO",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "<\"+",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "19",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "3158",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "346"
  },
  "25": {
    "name": "Point-of-Service Condition Code",
    "format": "fixed",
    "length": 2,
    "type": "numeric",
    "active": false,
    "SampleData": "022",
    "notes": "No specific validation required. Optional field.",
    "testCases": {
      "invalid_type": {
        "value": "rp",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "$)",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "9",
        "description": "Length shorter than required 2 characters"
      },
      "invalid_length_long": {
        "value": "117",
        "description": "Length longer than required 2 characters"
      }
    },
    "validationRules": {
      "exactLength": 2,
      "allowedChars": "0-9",
      "description": "Must be exactly 2 characters long with numeric characters"
    },
    "validExample": "18"
  },
  "26": {
    "name": "Point-of-Service PIN Capture Code",
    "format": "fixed",
    "length": 2,
    "type": "numeric",
    "active": false,
    "SampleData": "11",
    "notes": "Indicates the PIN block. Ignored in production unless certification requires it.",
    "testCases": {
      "invalid_type": {
        "value": "fd",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": ",/",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "6",
        "description": "Length shorter than required 2 characters"
      },
      "invalid_length_long": {
        "value": "259",
        "description": "Length longer than required 2 characters"
      }
    },
    "validationRules": {
      "exactLength": 2,
      "allowedChars": "0-9",
      "description": "Must be exactly 2 characters long with numeric characters"
    },
    "validExample": "16"
  },
  "27": {
    "name": "Authorization Identification Response Length",
    "format": "fixed",
    "length": 1,
    "type": "numeric",
    "active": false,
    "SampleData": "1",
    "notes": "Used by acquirers that cannot accept 6-byte values in DE 38. Ignored if present.",
    "testCases": {
      "invalid_type": {
        "value": "z",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "|",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "",
        "description": "Length shorter than required 1 characters"
      },
      "invalid_length_long": {
        "value": "43",
        "description": "Length longer than required 1 characters"
      }
    },
    "validationRules": {
      "exactLength": 1,
      "allowedChars": "0-9",
      "description": "Must be exactly 1 characters long with numeric characters"
    },
    "validExample": "3"
  },
  "28": {
    "name": "Amount, Transaction Fee",
    "format": "fixed",
    "length": 9,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "C00000050",
    "notes": "Required when DE 30 is present. Indicates surcharge, rebate, or transaction fee.",
    "testCases": {
      "invalid_special_chars": {
        "value": "-]?=;$>-+",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "JTGsFh40",
        "description": "Length shorter than required 9 characters"
      },
      "invalid_length_long": {
        "value": "qjTgkQkneE",
        "description": "Length longer than required 9 characters"
      }
    },
    "validationRules": {
      "exactLength": 9,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 9 characters long with alphanumeric characters"
    },
    "validExample": "cwgjCZ2V3"
  },
  "29": {
    "name": "Amount, Settlement Fee",
    "format": "fixed",
    "length": 9,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "D00000060",
    "notes": "Required if the transaction and settlement currencies are different. Not applicable for domestic transactions.",
    "testCases": {
      "invalid_special_chars": {
        "value": "~}.=<;_\\^",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "NZZzrcUj",
        "description": "Length shorter than required 9 characters"
      },
      "invalid_length_long": {
        "value": "LDJIFSlmwP",
        "description": "Length longer than required 9 characters"
      }
    },
    "validationRules": {
      "exactLength": 9,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 9 characters long with alphanumeric characters"
    },
    "validExample": "ezfLhRp2V"
  },
  "30": {
    "name": "Amount, Transaction Processing Fee",
    "format": "fixed",
    "length": 9,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "C00000070",
    "notes": "Required if requested by the issuer. No specific validation required.",
    "testCases": {
      "invalid_special_chars": {
        "value": "('!){@#\"-",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "g0aOqdzE",
        "description": "Length shorter than required 9 characters"
      },
      "invalid_length_long": {
        "value": "PkKtCKzuys",
        "description": "Length longer than required 9 characters"
      }
    },
    "validationRules": {
      "exactLength": 9,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 9 characters long with alphanumeric characters"
    },
    "validExample": "UkVLcxQDq"
  },
  "31": {
    "name": "Amount, Settlement Processing Fee",
    "format": "fixed",
    "length": 9,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "C00000070",
    "notes": "Required if requested by the issuer. No specific validation required.",
    "testCases": {
      "invalid_special_chars": {
        "value": "?!'{]]-;<",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "g7KzmF3b",
        "description": "Length shorter than required 9 characters"
      },
      "invalid_length_long": {
        "value": "YXxCDg1sGn",
        "description": "Length longer than required 9 characters"
      }
    },
    "validationRules": {
      "exactLength": 9,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 9 characters long with alphanumeric characters"
    },
    "validExample": "fBhJswCy5"
  },
  "32": {
    "name": "Acquiring Institution Identification Code",
    "format": "llvar",
    "max_length": 11,
    "type": "numeric",
    "active": false,
    "SampleData": "21089211169",
    "notes": "Critical for MID adjudication. Format: 1NNNNNNNNC or 59NNNNNNNNC. Check digit must be validated.",
    "testCases": {
      "invalid_type": {
        "value": "pluPkYQEZLm",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": ".;\\]%\"?/;_*",
        "description": "Contains special characters"
      },
      "invalid_length_exceed_max": {
        "value": "713678943589",
        "description": "Exceeds maximum length of 11 characters"
      },
      "invalid_length_indicator": {
        "value": "1284684358888",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "84684358888",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "00",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 11,
      "lengthIndicatorSize": 2,
      "allowedChars": "0-9",
      "description": "Variable length up to 11 characters with llvar length indicator"
    },
    "validExample": "0825765714"
  },
  "33": {
    "name": "Forwarding Institution Identification Code",
    "format": "llvar",
    "max_length": 11,
    "type": "numeric",
    "active": false,
    "SampleData": "09111111111",
    "notes": "Optional field. No specific validation required.",
    "testCases": {
      "invalid_type": {
        "value": "EotuWqnrySj",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "@*/*~++!$-!",
        "description": "Contains special characters"
      },
      "invalid_length_exceed_max": {
        "value": "740320878249",
        "description": "Exceeds maximum length of 11 characters"
      },
      "invalid_length_indicator": {
        "value": "1225798976220",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "25798976220",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "00",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 11,
      "lengthIndicatorSize": 2,
      "allowedChars": "0-9",
      "description": "Variable length up to 11 characters with llvar length indicator"
    },
    "validExample": "1117595876415"
  },
  "34": {
    "name": "Primay Account Number (PAN) Extended",
    "format": "llvar",
    "max_length": 28,
    "type": "numeric",
    "active": false,
    "SampleData": "2611111111111111111111111111",
    "notes": "Optional field. No specific validation required.",
    "testCases": {
      "invalid_type": {
        "value": "zHCFFduqHiQOwcEbfADHifYjriPO",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "$,%)\\']>_^/`;$(]#])&{*#`/#**",
        "description": "Contains special characters"
      },
      "invalid_length_exceed_max": {
        "value": "23265425515231379714136519632",
        "description": "Exceeds maximum length of 28 characters"
      },
      "invalid_length_indicator": {
        "value": "292498660806815672504284974559",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "2498660806815672504284974559",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "00",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 28,
      "lengthIndicatorSize": 2,
      "allowedChars": "0-9",
      "description": "Variable length up to 28 characters with llvar length indicator"
    },
    "validExample": "1152587045127"
  },
  "35": {
    "name": "Track 2 Data",
    "format": "llvar",
    "max_length": 37,
    "type": "alphanumeric",
    "active": false,
    "SampleData": ";5314451120000000=2812221711760?",
    "notes": "Required if DE 22 value is 02 or 06. Not applicable for manual entry transactions.",
    "testCases": {
      "invalid_special_chars": {
        "value": ".:].~($\\/.~!=;@&@[,##&_./]`{?|^)}*$~>",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "TgxwLXFnj5ndYHPyKjYENun9lJ4WQIroQQgShC",
        "description": "Exceeds maximum length of 37 characters"
      },
      "invalid_length_indicator": {
        "value": "3886gvnjqE66nxd0bFsgY4BBQKUFSUwRlbg1nUW",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "86gvnjqE66nxd0bFsgY4BBQKUFSUwRlbg1nUW",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "00",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 37,
      "lengthIndicatorSize": 2,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 37 characters with llvar length indicator"
    },
    "validExample": "07dY1IFM5"
  },
  "37": {
    "name": "Retrieval Reference Number",
    "format": "fixed",
    "length": 12,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "021700130644",
    "notes": "Generated by the acquirer and ensures uniqueness for the day. Combined with other identifiers for global uniqueness.",
    "testCases": {
      "invalid_special_chars": {
        "value": "#[=:-'=@\\-{.",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "0pgtimm02IF",
        "description": "Length shorter than required 12 characters"
      },
      "invalid_length_long": {
        "value": "eB5nhyKb3a97a",
        "description": "Length longer than required 12 characters"
      }
    },
    "validationRules": {
      "exactLength": 12,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 12 characters long with alphanumeric characters"
    },
    "validExample": "T225MbFFEPae"
  },
  "38": {
    "name": "Authorization Identification Response",
    "format": "fixed",
    "length": 6,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "AIR111",
    "notes": "Populated by the issuer. May be pre-populated in advice messages.",
    "testCases": {
      "invalid_special_chars": {
        "value": "(@@#%!",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "UoLOG",
        "description": "Length shorter than required 6 characters"
      },
      "invalid_length_long": {
        "value": "6bKYsZc",
        "description": "Length longer than required 6 characters"
      }
    },
    "validationRules": {
      "exactLength": 6,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 6 characters long with alphanumeric characters"
    },
    "validExample": "CUwzni"
  },
  "39": {
    "name": "Response Code",
    "format": "fixed",
    "length": 3,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "RC1",
    "notes": "Indicates the result of the transaction. Example: '00' - Approved, '05' - Declined.",
    "testCases": {
      "invalid_special_chars": {
        "value": "##?",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "rR",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "f4JA",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 3 characters long with alphanumeric characters"
    },
    "validExample": "Ykv"
  },
  "40": {
    "name": "Service Restriction Code",
    "format": "fixed",
    "length": 3,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "SR1",
    "notes": "Optional field. No specific validation required.",
    "testCases": {
      "invalid_special_chars": {
        "value": "@%'",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "Rr",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "2iCR",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 3 characters long with alphanumeric characters"
    },
    "validExample": "7IK"
  },
  "41": {
    "name": "Card Acceptor Terminal Identification",
    "format": "fixed",
    "length": 8,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "ey5A3etE",
    "notes": "Used for fraud analysis and MID verification.",
    "testCases": {
      "invalid_special_chars": {
        "value": ">=+|]&]%",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "v0pI1Bp",
        "description": "Length shorter than required 8 characters"
      },
      "invalid_length_long": {
        "value": "nTkg6jJah",
        "description": "Length longer than required 8 characters"
      }
    },
    "validationRules": {
      "exactLength": 8,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 8 characters long with alphanumeric characters"
    },
    "validExample": "7MPRaw2Y"
  },
  "42": {
    "name": "Card Acceptor Identification Code",
    "format": "fixed",
    "length": 15,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "ul3xfY8LZ1jCJdv",
    "notes": "Critical for MID-based adjudication. Default to MCC if not present for non-integrated merchants.",
    "testCases": {
      "invalid_special_chars": {
        "value": "/?)$.>-+*`*{-@*",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "pXFeyyI6MolzIR",
        "description": "Length shorter than required 15 characters"
      },
      "invalid_length_long": {
        "value": "JIXuvwIh5p2GaB7t",
        "description": "Length longer than required 15 characters"
      }
    },
    "validationRules": {
      "exactLength": 15,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 15 characters long with alphanumeric characters"
    },
    "validExample": "jcyfCBB6BJfagrg"
  },
  "43": {
    "name": "Card Acceptor Name / Location",
    "format": "fixed",
    "length": 40,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "12345MainTownStreetRoadNewYork123456NYUS",
    "notes": "Critical for MID-based adjudication.",
    "testCases": {
      "invalid_special_chars": {
        "value": "@>;<\"}{=_\"{*$_^){]?@#,>;.`-,)({:>&{|#&%-",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "cCHjkfMzOZ6hbm1geeDYOxD0TlywicZuphhPw68",
        "description": "Length shorter than required 40 characters"
      },
      "invalid_length_long": {
        "value": "nc7ND7RBpOGNlk7OUZQNT4Wjk0Rxp2uEkc4u15Ohg",
        "description": "Length longer than required 40 characters"
      }
    },
    "validationRules": {
      "exactLength": 40,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 40 characters long with alphanumeric characters"
    },
    "validExample": "14zQCBBVs0V4PjoNoJ1plpzQNq2BF9tqvNeJIIcR"
  },
  "45": {
    "name": "Track 1 Data",
    "format": "llvar",
    "max_length": 76,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "12T1D525MAX076",
    "notes": "Not expected for MVP. Ignore if received.",
    "testCases": {
      "invalid_special_chars": {
        "value": "{))}]@({(\"*_`?=,&*-#:^(},\"{_=~?)]>}=@=!;&:;\";@|]%#\"}]};]*__`[&/;-`}*\":&/)<[;",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "CAXDvtiym0QMLRNqF0SyCsMXzHuMvv0Nnq5vwDRDdA0YmNBSfmIG2ru5juBBJu32GyTgm9zT7aaNi",
        "description": "Exceeds maximum length of 76 characters"
      },
      "invalid_length_indicator": {
        "value": "77BXimDFvvcDTCBcbR1mYIlX9QdYLuWDwtx85nKoKix7neCVKdgju8dlE1XBWvd2EYvI08KKtiVVnl",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "BXimDFvvcDTCBcbR1mYIlX9QdYLuWDwtx85nKoKix7neCVKdgju8dlE1XBWvd2EYvI08KKtiVVnl",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "00",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 76,
      "lengthIndicatorSize": 2,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 76 characters with llvar length indicator"
    },
    "validExample": "47EXUCH04yebM15DpBtUUkZVF3glSkWk3nDzlW8ZJmek7UKxL"
  },
  "46": {
    "name": "Additional Fees",
    "format": "lllvar",
    "max_length": 88,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "013ABC1235MAX088",
    "notes": "Not expected for MVP. Pass to auth engine if received.",
    "testCases": {
      "invalid_special_chars": {
        "value": "'!@'[!+|`,#?`'+^{(^_;\"&^[%)~^#-!#&&(>^?&/<|{~/;/?\"`~>+&|{+&<}^'@[:-+*\\[_@*:|$:$?\"%~~},]@",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "vKIeI0pVWSOqU4swzk3Lp75R7WviGPQiZ8W2YzeLCWqV42AnSSN7w7P9ApYJNis2OuAle54zAOLtTpDYhh9R8ek5s",
        "description": "Exceeds maximum length of 88 characters"
      },
      "invalid_length_indicator": {
        "value": "089I3WeGlidjMOETVaGuaJOh2yXqHYqmtM0Q2tzocWiPCEpO9aoPVxLoWsuISkFEDKMPLUjs9hCdU1Alykv8pXIelVu",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "I3WeGlidjMOETVaGuaJOh2yXqHYqmtM0Q2tzocWiPCEpO9aoPVxLoWsuISkFEDKMPLUjs9hCdU1Alykv8pXIelVu",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 88,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 88 characters with lllvar length indicator"
    },
    "validExample": "030OdaSvlyQavCPbUM9D1D5HV7fRuYE3O"
  },
  "47": {
    "name": "Additional Data National",
    "format": "lllvar",
    "max_length": 100,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "020ABC12345678910MAX100",
    "notes": "Mainly used for 3DS authentication values. Ignore for MVP unless 3DS is supported.",
    "testCases": {
      "invalid_special_chars": {
        "value": "/\"(:|\\-):}`$;#$+<+%'?~>%\\!>'(*');(#\"-^[&^(,.=?]-`!]`^],^;`\".&~-#{~)^~_$!~-$-%/:-%|<^(!@<+~\",!_\\=-%[>",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "2UxHZWu5mnCqRUd9443RFaBKsCSwWkBBCnUiwRaewTV6pZyDlHsPxh9kLPBR8M5oBI0pXRPCTzOPT4VPuchfi5BlJoWXYi7ktmeto",
        "description": "Exceeds maximum length of 100 characters"
      },
      "invalid_length_indicator": {
        "value": "101MLpp7L4mzqleuHJNkrOFLxD6dh1cE2j0QjLNsc36COEwPC0ItiN0zw20fXEfK1ujWCRvaRuK47dybzXQf0HejCHQcntziycog9vW",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "MLpp7L4mzqleuHJNkrOFLxD6dh1cE2j0QjLNsc36COEwPC0ItiN0zw20fXEfK1ujWCRvaRuK47dybzXQf0HejCHQcntziycog9vW",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 100,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 100 characters with lllvar length indicator"
    },
    "validExample": "063PL1nFykVHAlMQOhNECmhtgDeu8XJC11o7Ymz2yRS2F8Vrc6QOFoB4lid3WVvVui"
  },
  "48": {
    "name": "Institution/Merchant Name/Consumer Name",
    "format": "lllvar",
    "max_length": 25,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "13ABC1235MAX025",
    "notes": "Ignore if received as it contains unreliable consumer data.",
    "testCases": {
      "invalid_special_chars": {
        "value": "^|*-?@@<?&^<_?~#!,/>#++~;",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "M6ozNyoOHSdl6NYEFyJR3YRawC",
        "description": "Exceeds maximum length of 25 characters"
      },
      "invalid_length_indicator": {
        "value": "026nruywOBmOLnh2UydZeQgady3k",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "nruywOBmOLnh2UydZeQgady3k",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 25,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 25 characters with lllvar length indicator"
    },
    "validExample": "010fWNyLDhWo9"
  },
  "49": {
    "name": "Currency Code, Transaction",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "USD",
    "notes": "Must be USD for domestic transactions. Decline if any other currency code is received.",
    "testCases": {
      "invalid_type": {
        "value": "CaD",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "!>_",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "12",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "5695",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "272"
  },
  "50": {
    "name": "Currency Code, Settlement",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "001",
    "notes": "Not applicable for domestic transactions. Decline if received.",
    "testCases": {
      "invalid_type": {
        "value": "JUh",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": ">_}",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "94",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "7659",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "008"
  },
  "51": {
    "name": "Currency Code, Cardholder Billing",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "002",
    "notes": "Not applicable for domestic transactions. Decline if received.",
    "testCases": {
      "invalid_type": {
        "value": "FJm",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "&@#",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "59",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "7968",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "401"
  },
  "52": {
    "name": "Personal Identification Number (PIN) Data",
    "format": "fixed",
    "length": 64,
    "type": "binary",
    "active": false,
    "SampleData": "0011111100000111000000011011100011100001011010000001111111011100",
    "notes": "Ignored in production unless certification requires it. Send to C-Box for validation during certification.",
    "testCases": {
      "invalid_type": {
        "value": "zbPBC0iHliH7YQnE6dKj1MuaYVwzlq0xr5DCwXycmu0qPZT4BZxYOSWYR2fbTknN",
        "description": "Contains non-binary characters"
      },
      "invalid_binary_chars": {
        "value": "2373259273487425595836222436722249553965786383465563543645636785",
        "description": "Contains non-binary digits (not 0 or 1)"
      },
      "invalid_length_short": {
        "value": "M69jfO7zivZEydZUmgYcsM0snyggyQoh7pzN2ru1t1VG7yFd76nHDl4bzbIH35y",
        "description": "Length shorter than required 64 characters"
      },
      "invalid_length_long": {
        "value": "EEsJ4VZYa8ZyVTCK4Qs5FWSGvDQ90Y6tpX9TsmpHxESbI49XERnnE4JL6duVP88gH",
        "description": "Length longer than required 64 characters"
      }
    },
    "validationRules": {
      "exactLength": 64,
      "allowedChars": "0-1",
      "description": "Must be exactly 64 characters long with binary characters"
    },
    "validExample": "1001100010011000111100000100000011011000001010011111110100001110"
  },
  "54": {
    "name": "Additional Amounts",
    "format": "lllvar",
    "max_length": 240,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "020ABC12345678910MAX240",
    "notes": "Used for healthcare transactions. Pass to auth engine if received.",
    "testCases": {
      "invalid_special_chars": {
        "value": "~}?,/_><|?\"+,_{;:^{,]).[<=+>@^!+//[<@.#<(@+>>$.~._|+>++@$,!}$$>_-~*'=<,'~+\\#_+&-:|\\_~!%`;+(%|\\[?:`|;/[)'^`!&#=:);)@_;,[)[?=<)/]:'?}`!!*[~.#-!}[$&',:^+.&#:+|<\\=}){-**>(,%%\\>:!\\/=,-^!,]^*\"=~.;%-:;@;[[<**~^:`|@=}<&-\\<'_`$]*@^);{_`\"`/~!-)$.:{:=",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "Qbnb6oYIYQTpLQGsTlS1WuplmErr3MtCNwZnWzbI8vgCJQXbio0Sqpm3zTpXO9BIEocOC5TwObphfulFe5r1UyOBZfwkN264zOHdyBgRBxL13UELkqhoFWrwjsK6LMSV1msSFyx4uyHE3T0ejj5Vmlea9UfaeNsaU62ppb7apmLFyvXVGSequz3VisjwtpWj0zNqQ6gLRpAEvZzR5lLmDOwae5e238E9u1Zqc6AZp0QwsGmkM",
        "description": "Exceeds maximum length of 240 characters"
      },
      "invalid_length_indicator": {
        "value": "241gVv7ItN4nHuAwQ6M9w2Qau00vLfWcKV5a2j4zzwEXkTJtCkYGhim4uFUGVPWW38EehZ5kTWM3CAdgcMFAlCziAhsV4hSOoJp4Wu4krplG7Kpuw0nDpKASYjov5G0S2jeZsFc4ran1KEXK1Se9kv2pEo8BpJ79kKCrmlMfXLXjvtn5YLap6VEbzGXd8u3k9VF5BHD4h5GkeZVzCncgTlWMJdv32GhBrW3vsFqQ0C8fXuuRYLa",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "gVv7ItN4nHuAwQ6M9w2Qau00vLfWcKV5a2j4zzwEXkTJtCkYGhim4uFUGVPWW38EehZ5kTWM3CAdgcMFAlCziAhsV4hSOoJp4Wu4krplG7Kpuw0nDpKASYjov5G0S2jeZsFc4ran1KEXK1Se9kv2pEo8BpJ79kKCrmlMfXLXjvtn5YLap6VEbzGXd8u3k9VF5BHD4h5GkeZVzCncgTlWMJdv32GhBrW3vsFqQ0C8fXuuRYLa",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 240,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 240 characters with lllvar length indicator"
    },
    "validExample": "2355UKTGSvuuhWDDnts0ophfif6z5k929qchoBCEjtN1VOoS5GBfW9oqvPdRI4DSIyPLvN5YY3Mj8vYxhdELyfmYOiYZMyQkbqY3vU0hOuCcNNaCksiLvz88VCqx4KnmLyw8ZVmzW6jGgmnim39R0bVwpc8cFHTGstq0MPwIQ3Phi2wAEEBpAFrmQwJjZfzh8dVUWzee17N6DJvwulagJ6NFiTf2OqdeVc41KEp7VB0KDQ"
  },
  "55": {
    "name": "Integrated Chip Card (ICC) Data",
    "format": "lllvar",
    "max_length": 255,
    "type": "binary",
    "active": false,
    "SampleData": "110101110001101111100101111100011111010110100101111100110111000001000111101001101101100111101000110111110111100110100110000101101101000011000110010011111100011000001100010001010010001000101010101001111010100000011101101001110000100011000110101100100111101",
    "notes": "Decline with error code 12 if received, as EMV transactions are not supported in MVP.",
    "testCases": {
      "invalid_type": {
        "value": "Pa6phV3Ws4cVEnvHFjPozW5uO2KLDV5mbsc1gqEKYn5Gn8naHr8Uv44n26eGEvFMiYV4fUrOSwbxQPU0ERIDl1MBE0xsbmNmCD8YnUUq4N68Drw32sdO8vTnnQ8XGQrFr32veVElRtdtWnoLM3YR4zLXnOjQ0ZSHBQ8XDYoLkQL7y8j3jYTwoC3VdH9a9Hy51rI626SveqlUCmFwxgFbnWXWCNZgsLMygHPieWRSfMRP18XVWoWguYEUFe9TE1L",
        "description": "Contains non-binary characters"
      },
      "invalid_binary_chars": {
        "value": "768936459869248625387683993553375936655333559558279793827484364846373546266785894226648846554955636649456458263674564663737689789234462435396269726957964862824944444897459547898254686522585725972366285336226923826343532245567388464479885894845248699666777",
        "description": "Contains non-binary digits (not 0 or 1)"
      },
      "invalid_length_exceed_max": {
        "value": "aL60uo0L9rYDg4Thd0jv8J0HSF4biFYOcdcydid8sUqbvWuwXI4BkJrGqWFiQrG249e672xBnhhmMvmbghJet2ovaLKO1PsdvkOek4J4ur2KXUvcONWLfyfo5RU6pbYdv4it6Q4hHzx4O2UDe7XeJAb0CziKvI0N1bAlJ5ku9Z4UP0mcNoXYadxwlHrRe09KTHjQ64uFpBbtAWwpHTIPlQkjqf1zUb6sTVV3WidfGiDYAg9Rsapgarbgj8k2D6cr",
        "description": "Exceeds maximum length of 255 characters"
      },
      "invalid_length_indicator": {
        "value": "256cKeJrSQhwTZTih7pB4su1IC9AAAKQh7d8BgGolW1E0EEgKayxYRO7AlLLuAIglME7efqnIvf4Zu5IxUVmaGFhUduKWefXXjF1bs4jdAsQia44rFo2MLbRKJm68mFQfRMIt8AoqDAt1zEr14R1x3izY7J9sZASNteXV3tr1NnKnpBu7mIDnWeInIx92lLff8NETe0cE6OvvtyPIMXmPqOGYSHU3094xRAtj0D7O5UMB3WwwkPxhxmOek09Gihkuz",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "cKeJrSQhwTZTih7pB4su1IC9AAAKQh7d8BgGolW1E0EEgKayxYRO7AlLLuAIglME7efqnIvf4Zu5IxUVmaGFhUduKWefXXjF1bs4jdAsQia44rFo2MLbRKJm68mFQfRMIt8AoqDAt1zEr14R1x3izY7J9sZASNteXV3tr1NnKnpBu7mIDnWeInIx92lLff8NETe0cE6OvvtyPIMXmPqOGYSHU3094xRAtj0D7O5UMB3WwwkPxhxmOek09Gihkuz",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 255,
      "lengthIndicatorSize": 3,
      "allowedChars": "0-1",
      "description": "Variable length up to 255 characters with lllvar length indicator"
    },
    "validExample": "163LKMT24vSwnxRmIZbPIxr4X8yUByXZLwy6rqeIsCNfJvypBhFTqICAA3Gao680uE7q3Eb9l5zgBMYGPgUPLGfmMFzwG1LRG6JmhOCkk0mCvGn84F3iapJS02JxYlYfQ9QoDvdz7lKK3mpOc4KxwjPoLGnmWaPl4T7Opl"
  },
  "57": {
    "name": "Authorization Life Cycle",
    "format": "lllvar",
    "max_length": 3,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "200",
    "notes": "Critical for fraud analysis. Values: 200 - Previous Auth Completion, 600 - PreAuth completion.",
    "testCases": {
      "invalid_special_chars": {
        "value": "<'^",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "mxpy",
        "description": "Exceeds maximum length of 3 characters"
      },
      "invalid_length_indicator": {
        "value": "004m4p",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "m4p",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 3,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 3 characters with lllvar length indicator"
    },
    "validExample": "002EB"
  },
  "58": {
    "name": "National Point-of-Service Condition Code",
    "format": "lllvar",
    "max_length": 30,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "010ABC11MAX30",
    "notes": "Provides details about transaction conditions. Subfields include Terminal Class, Presentation Type, Security Condition, etc.",
    "testCases": {
      "invalid_special_chars": {
        "value": "'^@!:^~/^\\#&-].**.~;?\"_;'$\"%:~",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "DguqcfW9bmzXbjIzCC6EE6LPgNeQy2J",
        "description": "Exceeds maximum length of 30 characters"
      },
      "invalid_length_indicator": {
        "value": "031mylBgXoJkdhzxOk9L5GjPUbNth4Lbc",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "mylBgXoJkdhzxOk9L5GjPUbNth4Lbc",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 30,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 30 characters with lllvar length indicator"
    },
    "validExample": "029QFN6H480m1aEMWwtnYLsfePgytuAE"
  },
  "59": {
    "name": "National Point-of-Service Geographical Data",
    "format": "lllvar",
    "max_length": 17,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "012NPOSGDMAX017",
    "notes": "Includes State/Region Code, County Code, Postal Service Code, and Country Code. Configurable to be passed.",
    "testCases": {
      "invalid_special_chars": {
        "value": "\\!}^,>?(@^@'$,+,/",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "8cNYjfzEpdLIWZFaW5",
        "description": "Exceeds maximum length of 17 characters"
      },
      "invalid_length_indicator": {
        "value": "018f30VMGHa0I1kWkhRd",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "f30VMGHa0I1kWkhRd",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 17,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 17 characters with lllvar length indicator"
    },
    "validExample": "010rxET8hDlxH"
  },
  "60": {
    "name": "Advice/Reversal Reason Code",
    "format": "lllvar",
    "max_length": 6,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "6MAX06",
    "notes": "Identifies the reason for reversal or advice. Byte map values: 80 - Reversal, 40 - Advice, C0 - Reversal of Advice.",
    "testCases": {
      "invalid_special_chars": {
        "value": "*,[],!",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "URa3rnf",
        "description": "Exceeds maximum length of 6 characters"
      },
      "invalid_length_indicator": {
        "value": "007GdHlh8",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "GdHlh8",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 6,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 6 characters with lllvar length indicator"
    },
    "validExample": "003LZb"
  },
  "61": {
    "name": "Acquirer Transport Data",
    "format": "lllvar",
    "max_length": 100,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "020ABC12345678910MAX100",
    "notes": "Echoed to the acquirer in the response. Not passed to the issuer.",
    "testCases": {
      "invalid_special_chars": {
        "value": ";'|+\\:)\"]|'>#*\\<++$^~$}.!~^{^*{]*}%$[$'*),$|<.;@>!)\"++&=$/*\"$-=]%[']?,))|-{;``#^~,!($];+()}':\"^^=\\*%",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "DxrFe5oczZPinIpgo3JdTpDWCpKheqvQwHvgBHYjJTR8DCI7CZjuTkFqcW0WeTNBAxgm21vnXYLIHB5WPWtq5wMu0I11aCCzDFbwr",
        "description": "Exceeds maximum length of 100 characters"
      },
      "invalid_length_indicator": {
        "value": "101IkZlBNr4NabTTb7W0S6s1wDjTSqpxAOSdbQbpMn076NZCYpLHbBppIej0ShceeHyNDNSRRrBqrxmm0zkqfopnmgt5ESu8ZZIXzZN",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "IkZlBNr4NabTTb7W0S6s1wDjTSqpxAOSdbQbpMn076NZCYpLHbBppIej0ShceeHyNDNSRRrBqrxmm0zkqfopnmgt5ESu8ZZIXzZN",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 100,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 100 characters with lllvar length indicator"
    },
    "validExample": "100vCSU8tmyDhAOy25r16kGp6ob0kF2MDyVNuIKoQ6VG67PxKZTgP4j0HNLR68YMC3dO1vNr2VDm564FdXROqdFLmjppQeWiQ2Nrlik"
  },
  "63": {
    "name": "Mastercard Networks Exchange Data",
    "format": "lllvar",
    "max_length": 50,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "020ABC12345678910MAX050",
    "notes": "Used for least cost routing. Ignore for MVP.",
    "testCases": {
      "invalid_special_chars": {
        "value": "'#-&:~&]{*&*^>+)+^=<|*\"|[/_}]-%]<],-]&#%',+@=`_}*:",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "fqBOc0jLqIGIIUVXgpJduSMpZcDUtD2V0vtqqNgP8hxPXuKLO7U",
        "description": "Exceeds maximum length of 50 characters"
      },
      "invalid_length_indicator": {
        "value": "051ZDlBbR7vKcNnrw0XqYbLiGHAHAIp4KBLuoJ32GQGXZ2Zpmpc80",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "ZDlBbR7vKcNnrw0XqYbLiGHAHAIp4KBLuoJ32GQGXZ2Zpmpc80",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 50,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 50 characters with lllvar length indicator"
    },
    "validExample": "024EBk7AtiXw5sg5AcZumygyiTf"
  },
  "63.1": {
    "name": "Pseudo-Terminal",
    "format": "fixed",
    "length": 6,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "PS1111",
    "notes": "Required if multiple pseudo terminals are needed.",
    "testCases": {
      "invalid_special_chars": {
        "value": "-#&^;-",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "YUxYa",
        "description": "Length shorter than required 6 characters"
      },
      "invalid_length_long": {
        "value": "Tn49Utg",
        "description": "Length longer than required 6 characters"
      }
    },
    "validationRules": {
      "exactLength": 6,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 6 characters long with alphanumeric characters"
    },
    "validExample": "W06dd1"
  },
  "63.2": {
    "name": "Issuer Network ID",
    "format": "fixed",
    "length": 3,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "111",
    "notes": "Required for direct routing.",
    "testCases": {
      "invalid_special_chars": {
        "value": "{`_",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "dT",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "AKxR",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 3 characters long with alphanumeric characters"
    },
    "validExample": "sPs"
  },
  "63.3": {
    "name": "Acquirer Network ID",
    "format": "fixed",
    "length": 3,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "222",
    "notes": "Sent if the issuer wants to know which network acquired the transaction.",
    "testCases": {
      "invalid_special_chars": {
        "value": "<!\\",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "Gs",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "yUCx",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 3 characters long with alphanumeric characters"
    },
    "validExample": "hoZ"
  },
  "63.4": {
    "name": "Processor ID",
    "format": "fixed",
    "length": 6,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "666666",
    "notes": "Sent if the issuer wants to know which processor acquired the transaction.",
    "testCases": {
      "invalid_special_chars": {
        "value": "#*_]>\\",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "hjirT",
        "description": "Length shorter than required 6 characters"
      },
      "invalid_length_long": {
        "value": "ytMEfFm",
        "description": "Length longer than required 6 characters"
      }
    },
    "validationRules": {
      "exactLength": 6,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 6 characters long with alphanumeric characters"
    },
    "validExample": "EBOCgY"
  },
  "63.7": {
    "name": "Processing Flags",
    "format": "fixed",
    "length": 5,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "55555",
    "notes": "Sent if the issuer wants to know which processor acquired the transaction.",
    "testCases": {
      "invalid_special_chars": {
        "value": "+(?:>",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "Tr8N",
        "description": "Length shorter than required 5 characters"
      },
      "invalid_length_long": {
        "value": "5s2tHg",
        "description": "Length longer than required 5 characters"
      }
    },
    "validationRules": {
      "exactLength": 5,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 5 characters long with alphanumeric characters"
    },
    "validExample": "NbeRD"
  },
  "67": {
    "name": "Extended Payment Code",
    "format": "fixed",
    "length": 2,
    "type": "numeric",
    "active": false,
    "SampleData": "01",
    "notes": "Sent if the issuer wants to know which processor acquired the transaction.",
    "testCases": {
      "invalid_type": {
        "value": "CF",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "('",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "5",
        "description": "Length shorter than required 2 characters"
      },
      "invalid_length_long": {
        "value": "515",
        "description": "Length longer than required 2 characters"
      }
    },
    "validationRules": {
      "exactLength": 2,
      "allowedChars": "0-9",
      "description": "Must be exactly 2 characters long with numeric characters"
    },
    "validExample": "31"
  },
  "90": {
    "name": "Original Data Elements",
    "format": "fixed",
    "length": 42,
    "type": "numeric",
    "active": false,
    "SampleData": "111111111111111111111111111111111111111142",
    "notes": "Required on inbound messages to Mastercard Networks Exchange. The remaining subelements may be zero-filled. Outbound from Mastercard Networks Exchange, the original message type is sent. Original system trace audit number and local date and time are sent if available.",
    "testCases": {
      "invalid_type": {
        "value": "uDZJzYsrXCYGgbbroVJCAkUhJbnRmHpqdZnYMerXfU",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "`^.]->+,|;,|\\-{*\"!'?(|_|=_\\]|=)&[--|&:=.\"-",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "57215377595863130948338707861423310427069",
        "description": "Length shorter than required 42 characters"
      },
      "invalid_length_long": {
        "value": "9416152631474941002305370176579352942108043",
        "description": "Length longer than required 42 characters"
      }
    },
    "validationRules": {
      "exactLength": 42,
      "allowedChars": "0-9",
      "description": "Must be exactly 42 characters long with numeric characters"
    },
    "validExample": "997337486871024672721454530093208905173381"
  },
  "95": {
    "name": "Replacement Amounts",
    "format": "fixed",
    "length": 42,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "111111111111111111111111111111111111111142",
    "notes": "Required from acquirers, or sent to issuers, for ATM partial dispenses and for transactions where the amount that was successful is different from the authorized amount.",
    "testCases": {
      "invalid_special_chars": {
        "value": "$,[!'%@*'~?!;[;,|/\"|^_}=]>}*\".;-#<[;@<(&}+",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "emd2WOW9bUb91kgXSe3xInjlaGQJWWPO9sqdbzuRZ",
        "description": "Length shorter than required 42 characters"
      },
      "invalid_length_long": {
        "value": "OszpQajaVv2Xa6Sj2nG7D8SU4WiAeDbJ0GhRDvrLBwp",
        "description": "Length longer than required 42 characters"
      }
    },
    "validationRules": {
      "exactLength": 42,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 42 characters long with alphanumeric characters"
    },
    "validExample": "S9sHBYeCXYGeL6a0sHDKVquU3s6lmeULkCRXdZvFUE"
  },
  "96": {
    "name": "Message Security Code",
    "format": "fixed",
    "length": 64,
    "type": "binary",
    "active": false,
    "SampleData": "0011111100000111000000011011100011100001011010000001111111011100",
    "notes": "Processor-assigned password. Required when DE 70 (Network Management Information Code) contains specific values.",
    "testCases": {
      "invalid_type": {
        "value": "uZi9Nl1XqJ3BhX5oakPekVWQRo5e0eaSFlT2OaIQyifhbVsQY6qeBiNzRdrihvy9",
        "description": "Contains non-binary characters"
      },
      "invalid_binary_chars": {
        "value": "7474533644437358539874444264664459864233746469654465977393476552",
        "description": "Contains non-binary digits (not 0 or 1)"
      },
      "invalid_length_short": {
        "value": "S2ZDB5e2GdDYWIPMmHwb6aHP03e4wLO9IuixsnnnOkyKCztAsNBTDRZmY40KVhj",
        "description": "Length shorter than required 64 characters"
      },
      "invalid_length_long": {
        "value": "xoqaK6GLSZikt0IyUIQLMWF2WywjtPMYSHqrB8n4gSPw2tv0AF9nXcm9DfFIA4Y29",
        "description": "Length longer than required 64 characters"
      }
    },
    "validationRules": {
      "exactLength": 64,
      "allowedChars": "0-1",
      "description": "Must be exactly 64 characters long with binary characters"
    },
    "validExample": "1010010111000101101001110011110101100101000110100101100100010101"
  },
  "98": {
    "name": "Payee",
    "format": "fixed",
    "length": 25,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "ABCJOHNSMIT09213020320211",
    "notes": "Sent if available and if the transaction is a payment transaction.",
    "testCases": {
      "invalid_special_chars": {
        "value": "-{:@^;/!`',{%;>^){%,:^_.)",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "1YuzHLdnrxizvgivRRT1PlQe",
        "description": "Length shorter than required 25 characters"
      },
      "invalid_length_long": {
        "value": "bocHigXXUFcjSxekbn9Z2uFTHS",
        "description": "Length longer than required 25 characters"
      }
    },
    "validationRules": {
      "exactLength": 25,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 25 characters long with alphanumeric characters"
    },
    "validExample": "uTI5007SoLmOogbSRY1xdHbg9"
  },
  "100": {
    "name": "Receiving Institution Identification Code",
    "format": "llvar",
    "max_length": 11,
    "type": "numeric",
    "active": false,
    "SampleData": "11111111111",
    "notes": "Sent if routing is based on this DE instead of the PAN.",
    "testCases": {
      "invalid_type": {
        "value": "LaAcprhFkoq",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "[%)]!${}->/",
        "description": "Contains special characters"
      },
      "invalid_length_exceed_max": {
        "value": "170595211745",
        "description": "Exceeds maximum length of 11 characters"
      },
      "invalid_length_indicator": {
        "value": "1248450112402",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "48450112402",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "00",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 11,
      "lengthIndicatorSize": 2,
      "allowedChars": "0-9",
      "description": "Variable length up to 11 characters with llvar length indicator"
    },
    "validExample": "1138061667678"
  },
  "102": {
    "name": "Account Identification 1",
    "format": "llvar",
    "max_length": 28,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "013AAI11111MAX28",
    "notes": "Copied from the 01xx or 02xx message.",
    "testCases": {
      "invalid_special_chars": {
        "value": "^][}$)),=^.];,&;%@'*{+*$(:\"`",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "xEPCyqWAfg5C4EWhyzVPBVIdcsJ0E",
        "description": "Exceeds maximum length of 28 characters"
      },
      "invalid_length_indicator": {
        "value": "29wVwgtezjd8Bb3OBUFdNO67JVFAvk",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "wVwgtezjd8Bb3OBUFdNO67JVFAvk",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "00",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 28,
      "lengthIndicatorSize": 2,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 28 characters with llvar length indicator"
    },
    "validExample": "05oScMR"
  },
  "103": {
    "name": "Account Identification 2",
    "format": "llvar",
    "max_length": 28,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "013AAI11112MAX28",
    "notes": "Copied from the 01xx or 02xx message.",
    "testCases": {
      "invalid_special_chars": {
        "value": "[({;@+!;`=['!]%\\_\"_$@;\"_#~>@",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "9jKs3VQQhwIUNwpe6Uk5DIQ9KnKRu",
        "description": "Exceeds maximum length of 28 characters"
      },
      "invalid_length_indicator": {
        "value": "29Vx9yoPFbyqM0osaJzawx4Ra3H7Cm",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "Vx9yoPFbyqM0osaJzawx4Ra3H7Cm",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "00",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 28,
      "lengthIndicatorSize": 2,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 28 characters with llvar length indicator"
    },
    "validExample": "06W0PDFu"
  },
  "104": {
    "name": "Transaction Description",
    "format": "lllvar",
    "max_length": 100,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "013TDI2111MAX100",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": ";*?`\"|.];]%$:'@@<_/+/+<#%*}:|?=).-\"/?\\|&>;*\\;~\"\\*~}[#},\\-<.+$+#'[{,@(<\"^_*?:[^)'\\!&'*`{`;|_^,=#_:.['",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "zHFBT2Vb6QEzV2rZGD0plKFJIR35hMr4TMVaUoNZPLi1Z6BSMBdyT1nXxQpoNiP0sHpHNe6N0YxfmHWjJ6dobkMquHweX96wqisD5",
        "description": "Exceeds maximum length of 100 characters"
      },
      "invalid_length_indicator": {
        "value": "101neY5PPDJG0JeH6N7j5acQCe5DyJurRs3aq5YhCHaXsEEs0bDg55zOG4kqMamUufTJeT9aZfNux739QIb2LiHu3szAeJxVHRkBu4j",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "neY5PPDJG0JeH6N7j5acQCe5DyJurRs3aq5YhCHaXsEEs0bDg55zOG4kqMamUufTJeT9aZfNux739QIb2LiHu3szAeJxVHRkBu4j",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 100,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 100 characters with lllvar length indicator"
    },
    "validExample": "02889SxtaLutLJZ0E5n6V1yXPp1CFRJ"
  },
  "105": {
    "name": "Large Private Data 1",
    "format": "lllvar",
    "max_length": 255,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026LPD11111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "!|_:!{'|*,+(-!$'_#][{{*.#-+~.{~\\=**,-}_}|%%_!/$`[;!`*.@/\\/|_/]-+{|)+`[^}-=?:+!(.?/~&{&(<:!|`;$$.(+@?_%[[[.:'*]+'~_'^#:|['?_&@^}*_-_^]?(/_&]}$@[]|/'|+\"/]`&%\".'<_),@`_:)`\\+!.'=,#</:}|{))~\"{}\"<`<#-|]+#>$@%}`{;||~\"?*+!*'\"%>`.+^-*?!$}:;\\<,@:}^;,|#)*%%&|@,)?@).",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "1mRKYAtqt3d1ZO2Obd6ivCeVlwggklcuVBZZyibSv9TTpPoKoJ4qVVPyAsqZqagDbFfi1YwCpXk4ZyXOa5sMkGgFqvEcVSWIfP1tLaeAXvhC44nS21kRVa8TQaf7QSjOhBebHnUFCpbNVAeCbcGejWSlWpvrnL4bKbmfLdbu6UJGNWfE2KD6Ji3b6v4mZe22NqK0uuN5fjjb8CTDc0iMb7aFt5JRIuoyJdNxvHF6FNUKyH6iH2NR9dfxaOou0GWD",
        "description": "Exceeds maximum length of 255 characters"
      },
      "invalid_length_indicator": {
        "value": "256wT0su92DNJG0dOXGjzf0rBYaVTxbufzz8yJoEMroqprF8Bl01fXSZUuh8Pddzt1l6xY5jc5HPxlBNZc1ErGVeZit9yCAqu2PvMS7M9L7AIhPXzZLDu16xswq8qHalCAtFvTkLmpz9uByduwh4V5xs8kHDqkjnkWnYHwCfP9nwb5pRGpY6AhDoJEZO7aMlf5GYsK6x5N4DmqFO4WZegWELLKSih9WekDC6sLRXCgX1DWjhfb00e1d4leApTj5nre",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "wT0su92DNJG0dOXGjzf0rBYaVTxbufzz8yJoEMroqprF8Bl01fXSZUuh8Pddzt1l6xY5jc5HPxlBNZc1ErGVeZit9yCAqu2PvMS7M9L7AIhPXzZLDu16xswq8qHalCAtFvTkLmpz9uByduwh4V5xs8kHDqkjnkWnYHwCfP9nwb5pRGpY6AhDoJEZO7aMlf5GYsK6x5N4DmqFO4WZegWELLKSih9WekDC6sLRXCgX1DWjhfb00e1d4leApTj5nre",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 255,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 255 characters with lllvar length indicator"
    },
    "validExample": "224Xxc2lyZthppPyuafObCRNnRjpsf3QCGlBor8WoOwXAfjl9e7PCuACfKEVGzNhJj8YtrWGyXLCLjqj9LnXb6f1sXcrbmV9JXl5E2ndilSouJIikrS3dOipzgN3W3nBa6uuFXkAl4gl1HxMhnAY1bOgvMQhJAuFlMc3LYG8Gf1n4HSWmwZeXFbYdtj1eOSVVrUP4T4d6Aot4UpJhObMdsuF0IInwZJZa6I"
  },
  "106": {
    "name": "Large Private Data 2",
    "format": "lllvar",
    "max_length": 225,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026LPD1111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "'>=;:=$$<:)-|<|&;=[_&.':-~!_{}<+\"*-?]$-|/[!}<<?+=!';?_?\\!|-}-+-<\">>*#:[;;/_]=:=`\\./&^_%\\`\\`(:`;?-!]^},'|%\\&='`{;?=<**=,#$((#+@{%)^@\":,/<%+-&&#._#\")>>'*`#/[[]<&#.@>:,`;\\\\!.+>!\\]&+:+%}(^]!:+`??-!.~:\\_`~_'#?$'^~^}[+[},%;/!?]^~)?",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "jV7RH5X0IP5Hu3Ym6dSxFN3O72CTtXE9jEyGpLKa5jEPRYraj2VclmTzWRg1CN09yHbvoVVsuJUPcTN0RzHmM3xiA0cmGeSWWn7fLsKiBz92LAbwmukrNyl8whtum4ai3JOAOXvlO0K4ffdNymnP5YuSQZP5bIVoAEYXnLNrrGZVcPPqNFhAq19Odso3F2YYRoGZ4L0Z3lhKMCTGCtixNMj6zb5sieiht3",
        "description": "Exceeds maximum length of 225 characters"
      },
      "invalid_length_indicator": {
        "value": "226wsn7HWntQo3TxphxEPd5rDuBSUWisCJCmnIEUnBF4SipKUz3cKsETeUMJEGgcGNco5yKbDDZAhWhlgzEAnhcxaO5g9dIOrKrbx58mnldoeZb4F2zxCf6VK0Mqjc4nrIFAxZIV1oDzaKvLK0BHReZu8fFfl5SjklK1axp7pAtJ1QknPfS87nNZ3D5kWayEcvHIPKajDbJOLFDvIYjfeenvuOCBm32EEQBI",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "wsn7HWntQo3TxphxEPd5rDuBSUWisCJCmnIEUnBF4SipKUz3cKsETeUMJEGgcGNco5yKbDDZAhWhlgzEAnhcxaO5g9dIOrKrbx58mnldoeZb4F2zxCf6VK0Mqjc4nrIFAxZIV1oDzaKvLK0BHReZu8fFfl5SjklK1axp7pAtJ1QknPfS87nNZ3D5kWayEcvHIPKajDbJOLFDvIYjfeenvuOCBm32EEQBI",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 225,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 225 characters with lllvar length indicator"
    },
    "validExample": "054ihNA5RBGvgFkDB6RvsuSsg340VadtRyZGHs66AlVrhDRIGlbL8RwPZ"
  },
  "107": {
    "name": "Large Private Data 3",
    "format": "lllvar",
    "max_length": 225,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026LPD31111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "'*,|%_,}_+=@':'&\\\\_]\"%<%)#{^(-;+}/`?%_!/{\"'\\%_\\:'>>\"!/\"<%{+|,$*_>}{[$;%>&.;/+):*?%{*!_,<`_&)?=:'(),{%#/%$?/>#@$|.)$>^|*,<[|.~.^+!%%,:];)$~+&>.!@@&&%?%@&/@\\\"_?.&{'\\__/:!*+@;}^%(_!/#=[]+'&?/$&'{&(,*[@?=;[+:`/+#%+}[)^&},)'`!-~/]",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "6raoeXHzxI5EwLykalFfIRlem33nfR59rbCwK1pHUdo6xtPkBRdd6wwefMX4ThdoaFwHAOXSrgFtZKa7bX43iMNs6tV93HSLeq8U4OErTFi3Mx4ie8pwb3ji5igpQvshlcvjeAfOLkvjw704J2WEZXuQEARxql8i9KPfyhAwbOAXPsgIMRBFQFLHc6dWxPauOTvIClbT6uyVO2ZC5pIW9Jzq6dfdvTsUYi",
        "description": "Exceeds maximum length of 225 characters"
      },
      "invalid_length_indicator": {
        "value": "226hC8dZX9DwuwPIVb8YKiLE7eeltPcNtOP2RfSqdl3jOWnMsSfiOAEawQ8mp1woJNtyaVH25AQKevrMOCXFJB92wHeFG80zBdBGWV7cuOVwdrSh1aWvdV1ntFEh9MczuX48Tto4uIooRcGsfkaSwj78XBHEiHf05CMZ0Way2NGiuKtfd21TupO69wXzsL1tIN0a1JHuV5CQl9J30Aq89DPYfOjfaBGQwzOS",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "hC8dZX9DwuwPIVb8YKiLE7eeltPcNtOP2RfSqdl3jOWnMsSfiOAEawQ8mp1woJNtyaVH25AQKevrMOCXFJB92wHeFG80zBdBGWV7cuOVwdrSh1aWvdV1ntFEh9MczuX48Tto4uIooRcGsfkaSwj78XBHEiHf05CMZ0Way2NGiuKtfd21TupO69wXzsL1tIN0a1JHuV5CQl9J30Aq89DPYfOjfaBGQwzOS",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 225,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 225 characters with lllvar length indicator"
    },
    "validExample": "101cfirpKWa8FyCHrxahGi5WClO504EyCXcXrb3MQgzbKBa9N0h68aHYe1GP04IYRjif64rrkJivqCF34JK4gMJEJeQoJWKg7FmN8077"
  },
  "108": {
    "name": "Large Private Data 4",
    "format": "lllvar",
    "max_length": 225,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026LPD41111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "+~#@.~?;_-]\\@^[=\"*(=%(/#>*{.|(%*}:\\<|=;-~^`@&!/|(\\~\\$<_?&=->;##(`'`<=_+#,*;-#?\\^>;'`@>.'\\<_.>;_]|>\\&\\;;*.`|(___$=:'>;'/,?{(~&<}!,\\\"/>*\":=$'`??,/?.#_@&=)(|#\\@/.:':/'('`#)=%\\#~(:&[%)\\!\"!,]!/>,~^,{;;@<<#;<-=![_[;<_?*$-^@\".\\^`,'.",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "C37xTztzhFyRJ6ti9X8ySs0IRPCzEJT5SpLPUJbE20QvjdhHQEcbq0iZQ4TeiQ1thSx9h92adysTK4epOEi97003vkqcezj5TmBC8NggLshxOTYFeh3N3INcauSdrsgfFEbfWYn0r83CmCxSdyQXzxZ3ckNdNfc1yBb376RvGLOgD7QXi9MIO3qWYHjgza4M9xAHVPLeKiAiqXHPK0hf4qE96NjGDeKOMi",
        "description": "Exceeds maximum length of 225 characters"
      },
      "invalid_length_indicator": {
        "value": "226mjts4EGFlcVgRvdosLJhXyhSEyCKr1kg6kKtz4pVYaYrEy2GBCCdP6ICiIPnCXuO8vJsMYJmQ2dUDEcybCKvW5MuOKPwv3KuNGn7Qoq9y6Pry401gI9UbwrW1B0sppnddtGhXtyWolAv5v335fi28L5ID45PJ5tk7Dlv6iDU4rLGkM0WhOcBWWOHTL4ifiMkaSpZ7GFNNxVgI0RByvFLX8We6KWsMNPsV",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "mjts4EGFlcVgRvdosLJhXyhSEyCKr1kg6kKtz4pVYaYrEy2GBCCdP6ICiIPnCXuO8vJsMYJmQ2dUDEcybCKvW5MuOKPwv3KuNGn7Qoq9y6Pry401gI9UbwrW1B0sppnddtGhXtyWolAv5v335fi28L5ID45PJ5tk7Dlv6iDU4rLGkM0WhOcBWWOHTL4ifiMkaSpZ7GFNNxVgI0RByvFLX8We6KWsMNPsV",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 225,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 225 characters with lllvar length indicator"
    },
    "validExample": "075e9MiB9P93g9KlMtTxU6euqh4PKbMm0cLleN0UicK4luTHBMbLw1lIVORKstpggr4ojFsiMUjXT6"
  },
  "109": {
    "name": "Sender Data",
    "format": "lllvar",
    "max_length": 225,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026SD111111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "<'<~('.^_=*_)+*){/#\"(!@#-:/'_*~*#}>$\"~#[.&\\\\/)|^.~?^\"=|&}|#<<[-')=!*\\!%\\.'~*/]\\`@(':'[;_[}+{%_^<~#}\\:<^|\"#^>#,\\$=?]{\\->|[&@;{^,<]@\\|_\"$\",^/=\\.@!:(-]>}_=<?:\")<*~_<`&;-[\"`|:->!`&}/:`~,[-\\'!'`+[^<>%!~=`,%=>~$?>~.\\|}||_`\\$\\^#)%'<",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "3RyzOte4Bet0flPyyK5TqkPedGoXoOBz4M1WB8opjPFSVMFb2y9IpFbLujazdOB7MLIRMUppsp5QZ8AbSFOXghGUmdaNGeh3YJROmcvalEM2GfnaFWLeTh1Ub5y6Mr2DHBlmRycH7ho2PvkQ2ADFbe6wucfhUUqMLAARiyKLA54qGbHni62EyD6oUrHhFruGvECQNeL3oAOIzVSwG9LSKatHY2yLJ4186K",
        "description": "Exceeds maximum length of 225 characters"
      },
      "invalid_length_indicator": {
        "value": "226poaZTWqgSwY0hdUc310tjf9SF65gLN41Kry2YyLXIsnRdY8bZmAyataEk7KVeLRcouKCp7Xcp4C2agAOWzcJFuv5dYidLdaYOk0i9HywKeZGGN3I0hTbXbJx27WghAnH6SyxYDHpEAEfN9jHdYoCuFYPreLvXNjIMebRambNpQND1Yczm0Q4p2kloMgq7lwk67UNV2Zu3Z42h3AsDvMpu6mpcen1Z8MTE",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "poaZTWqgSwY0hdUc310tjf9SF65gLN41Kry2YyLXIsnRdY8bZmAyataEk7KVeLRcouKCp7Xcp4C2agAOWzcJFuv5dYidLdaYOk0i9HywKeZGGN3I0hTbXbJx27WghAnH6SyxYDHpEAEfN9jHdYoCuFYPreLvXNjIMebRambNpQND1Yczm0Q4p2kloMgq7lwk67UNV2Zu3Z42h3AsDvMpu6mpcen1Z8MTE",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 225,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 225 characters with lllvar length indicator"
    },
    "validExample": "086FFMDfwauHfOVMLQjM5MHbubR6IUkkRV6vsc7QyJ2W7ynLGMk9vCovJ25tPVZGQcTaDAcw50XwaIREKhcB3MmAp"
  },
  "110": {
    "name": "Receiver Data",
    "format": "lllvar",
    "max_length": 225,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026RD111111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "_(%_`@:^\\@+&(\"&\\:@(>}[!;^]*-%@%~?!+>}\"}\\{,.-@|&],@)+-#@[|?.`}]^_?)'.&?:_`#&>>%{+//[;^&.\\+:\"/;;?&+^:$!%:},,+})+=<;}.''!(\\~!#-(<\">;^~!.,:=!/@^}#~%%{(]][\\=[?[=>\\%-+^#-^&?]`];&\"$}*,:&`#?*![=;(.)>\\'-[,%=~.);_[%`\"<>;+#%++},^(^*\"~),",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "V3Ifg7zQILgEL6ZaZq4B3mTILY5jPIDA86AHc1IE3ElQdaU036jXh6Hn3mmWIZALajLLsk2UP9pk8XHMesh7hoBa4urQAFARGHjJMWpMRSRrqHAyyHaqVCWvkeQ8g6sgnCF64FA3nt4WYRK4W99NKPgGpTyPCnVfz7v2UMWuBprZnP51OWzzMvPolxBv4oOOyA8TncrRcGFZSH6Lip1OQv0qKsH8NR2dxd",
        "description": "Exceeds maximum length of 225 characters"
      },
      "invalid_length_indicator": {
        "value": "226mh4m4pvpmcjtLOTfVyvAIQeUAUV2IHK7BgVFv3zYXJFuEMzbj9qbmXPYHFUuhkwib1Gk7ZopMJa5tUkGVVYiZdlcvEONzO858kgwQFwndI0CvRoqbkPZZDBThYFkhQdSmCjsM7qndBv1QwK7RxNI55UdYcMjZ9iwsnLBUHTrXsmko4l135xwR0zice9F7jJasgxidj5vCEBn84LkaBcxmlvPwuBWLo96T",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "mh4m4pvpmcjtLOTfVyvAIQeUAUV2IHK7BgVFv3zYXJFuEMzbj9qbmXPYHFUuhkwib1Gk7ZopMJa5tUkGVVYiZdlcvEONzO858kgwQFwndI0CvRoqbkPZZDBThYFkhQdSmCjsM7qndBv1QwK7RxNI55UdYcMjZ9iwsnLBUHTrXsmko4l135xwR0zice9F7jJasgxidj5vCEBn84LkaBcxmlvPwuBWLo96T",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 225,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 225 characters with lllvar length indicator"
    },
    "validExample": "211KISsgg2ik7rOGQmDZ8GWil1kg7Rd8hjWAiEC5yYcO0iIZ3RPnzBz6rYpQSrvtxWEE7purcuSQFfqN7zKp94SrFeDgCdigUemYvkpAw0eESzNa640qddsYYWnexclCshEATPFCQ1wX0NjFkNqjGnXFoHMr9qXTDXOAWMSxj0OJUoK5TnWYH8yUGalwad9alM82F5ftOuaOOnynd30JQG"
  },
  "111": {
    "name": "Additional Data, Private Acquirer",
    "format": "lllvar",
    "max_length": 225,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026ADPA1111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": ",.\\>_/#}_)`-$#&]#^->)*!}=![+)\\{@]?@~{>%<\\.=/&'#'@+>((.=$]}=&,,%(-(.+['-)%^!:@'\"-(|.`/#?);?`~&_}%^*=(+.\"~`;\\_<-\"*[-\"}/~'[.+\"<!+?(<(#|-]~-.{%]}\\><'=#}=>\\#@<:)!$+&]@!:<\"|')+@%#{&&`~|~?(&%,*(^@`({:%%-;][>^),={>.<,'[({(||]))(),,\\(",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "17L5RQTZFUDLYaBDzO9sNtAhP1HronTI58niraoYcCRMMY1D6qY4OZCb2eDeaTo3NKiViDp1KosjtlMCWJrkY4CVx3Vl9RMDZbw4GBFf0uUbbHGSD150WRNp1I6h8jQp7wpshFG7Og1T7A9z45g1XenA0zrEgKIqZBkO8yWXI9QVtCOOc768EzMDzCGGTzUKUXcDehDYA1nUaJB7hb6WKvQXPlfpItcqqu",
        "description": "Exceeds maximum length of 225 characters"
      },
      "invalid_length_indicator": {
        "value": "226Oi3rjOzsMIw43Ytytp8hewDkeDJ4NOjXnmqDxyi5vWCwXaJvxJeti5HWg1L6hqfZFRLxH0gyXmKBa6efSt04w0TbBGz6CigKcgC2HJvy9cmZupnmvMOwBvxi9cBm3gVtToGCK0PRYcVfkwpHqvL3vxH6b5Wbzoe07gG7NukXOu1KMdxyYD7xKS7letrzTpYJpG5VzJ1vW7sAjObPh8TvYDHMy1wsR7pG3",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "Oi3rjOzsMIw43Ytytp8hewDkeDJ4NOjXnmqDxyi5vWCwXaJvxJeti5HWg1L6hqfZFRLxH0gyXmKBa6efSt04w0TbBGz6CigKcgC2HJvy9cmZupnmvMOwBvxi9cBm3gVtToGCK0PRYcVfkwpHqvL3vxH6b5Wbzoe07gG7NukXOu1KMdxyYD7xKS7letrzTpYJpG5VzJ1vW7sAjObPh8TvYDHMy1wsR7pG3",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 225,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 225 characters with lllvar length indicator"
    },
    "validExample": "106DrLUEUMpyNeNYEJ5uCoZqvRelP9HOV5LABy7JVg6ZpO8WbxwUidW4SPmrmuaNBhjY0bNZfs0SF4qgphBed2oZmqNs9iAwPQnUV4HCLlsfv"
  },
  "113": {
    "name": "Authorizing Agent Institution ID Code (ANSI-defined)",
    "format": "lllvar",
    "max_length": 11,
    "type": "numeric",
    "active": false,
    "SampleData": "11111111111",
    "notes": "Required only if requested by the issuer.",
    "testCases": {
      "invalid_type": {
        "value": "cBXUArkCQGv",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "(\\#:'^\"`\"=\"",
        "description": "Contains special characters"
      },
      "invalid_length_exceed_max": {
        "value": "204344498991",
        "description": "Exceeds maximum length of 11 characters"
      },
      "invalid_length_indicator": {
        "value": "01224685990063",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "24685990063",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 11,
      "lengthIndicatorSize": 3,
      "allowedChars": "0-9",
      "description": "Variable length up to 11 characters with lllvar length indicator"
    },
    "validExample": "0040511"
  },
  "120": {
    "name": "Account Qualifiers",
    "format": "lllvar",
    "max_length": 6,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "C11111",
    "notes": "Required only if requested by the issuer.",
    "testCases": {
      "invalid_special_chars": {
        "value": "(%>+%+",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "GGet0sD",
        "description": "Exceeds maximum length of 6 characters"
      },
      "invalid_length_indicator": {
        "value": "007uQwCu0",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "uQwCu0",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 6,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 6 characters with lllvar length indicator"
    },
    "validExample": "003uU5"
  },
  "122": {
    "name": "Sponsor Bank ID",
    "format": "lllvar",
    "max_length": 11,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "07ABI11MAX100",
    "notes": "Required only if requested by the issuer.",
    "testCases": {
      "invalid_special_chars": {
        "value": "|\\&?``#\"}%`",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "0kfz0ZFVRXPg",
        "description": "Exceeds maximum length of 11 characters"
      },
      "invalid_length_indicator": {
        "value": "012pe4gqvchQZI",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "pe4gqvchQZI",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 11,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 11 characters with lllvar length indicator"
    },
    "validExample": "005L5qc9"
  },
  "123": {
    "name": "Additional Data",
    "format": "lllvar",
    "max_length": 50,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026TDA11111111111111111MAX050",
    "notes": "Required to support the Address Verification Service (AVS) and other types of verification data.",
    "testCases": {
      "invalid_special_chars": {
        "value": "&_:{^;@[!_\\)}}.?-)()!.\"=#';<%}&/|]/[{>%['({`-]&/)^",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "hXTCTllFON5avTaS3imX6Jxvgoo7269MIfio1Va7940qEbtgN95",
        "description": "Exceeds maximum length of 50 characters"
      },
      "invalid_length_indicator": {
        "value": "051aSHUAxpsoCgiRMPfw1JOaY7xGadLUxZrIVXxMcVmlxRYPMD84j",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "aSHUAxpsoCgiRMPfw1JOaY7xGadLUxZrIVXxMcVmlxRYPMD84j",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 50,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 50 characters with lllvar length indicator"
    },
    "validExample": "027rIzfmLDFRaq8JHsQ5gmguiZrdyh"
  },
  "124": {
    "name": "Tag Data Acquirer",
    "format": "lllvar",
    "max_length": 255,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026TDA11111111111111111MAX255",
    "notes": "Sent if tagged data is available in tag-length-value (TLV) format.",
    "testCases": {
      "invalid_special_chars": {
        "value": "`^#\"~\"<?'$^**\"&'<$*:_'?,,\\+*`';.=\\/]$~~]{-$$=,':@@!'*(;}(^?*=!;??~\\[#`;[?!.[-#=+(={_%~))|}'`~%{;+#{<~-^!'^*?/}];&((-]{;[^*<^{;_:*$#]&*)`]:;\\!'-|=/|?&#=~,:%\\.?$)~~!]#`[#{#)?}!*/[:~|.![!=!)_}!<;_<}*+`{\\[=$&&@/%~+.\\\\#]([^/.@|?//&;>+)-:*}*,/'^[,.?$!#^^*/>;/'{",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "7TZBdPvR2QbPGHardTsJbQYea8AlPAgHkAoxcjptLKQmOH5hFuwuDbsF27e4NeN5vuxsoVUiErvPWE2n2mEr6H5cYz2ozc1hcNU61kcpImXbpcGufuoa19GFHr1frXlOkG9HS757woXzqtswPTmns7GDm6cQOub8LA8r3Cvss8qW10F1I8v9S6RVeYrBUQokgyCeYwP47bCPdiqnNbdZ2gblHpfakVNEU9nDLLfMKAoUw9MLmw3cZHVrrewP7hJo",
        "description": "Exceeds maximum length of 255 characters"
      },
      "invalid_length_indicator": {
        "value": "256chzrSEUT8lk82T5ARz8THP5Wynjq6oOE6xQrHs1nocuXZ8ps1CNDCMFXZQbtTi1dkyJRtCoqBNbFvlVaKPEgafeSE3DX5gEk00jekwtxuxBWtCSEz5qjL0dClcLmU1rFI7A6mA3KMXfTgElzhxSgVm2OFiVAilbs11Yu55F4KG8CdxYYy7zElDaeTxeBR26YrQtLbH0xyxqA1cYfTITo8ZBUzyuq3oUaGhTE6QTuxQwrG7nwpprI1DCJVxwFxhh",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "chzrSEUT8lk82T5ARz8THP5Wynjq6oOE6xQrHs1nocuXZ8ps1CNDCMFXZQbtTi1dkyJRtCoqBNbFvlVaKPEgafeSE3DX5gEk00jekwtxuxBWtCSEz5qjL0dClcLmU1rFI7A6mA3KMXfTgElzhxSgVm2OFiVAilbs11Yu55F4KG8CdxYYy7zElDaeTxeBR26YrQtLbH0xyxqA1cYfTITo8ZBUzyuq3oUaGhTE6QTuxQwrG7nwpprI1DCJVxwFxhh",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 255,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 255 characters with lllvar length indicator"
    },
    "validExample": "0787H7TtsfN4QwOwqTs8mZTIhFCnxHePIYbj7Tamqk59m0Tp66IZK00yWGeiVrQGykdSgL95TAagGPziA"
  },
  "125": {
    "name": "Tag Data, Issuer",
    "format": "lllvar",
    "max_length": 255,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026TDI11111111111111111MAX255",
    "notes": "Sent if tagged data is available in tag-length-value (TLV) format.",
    "testCases": {
      "invalid_special_chars": {
        "value": "}>|>)@=)<;|{^$`;;|:]~=*\"-,;??$>.~%}>-,&=^%[/'$=~\"*}!&[^+#_%]%@~@^/\"%\"{.,,&|_()~>-==?\\@`$-#..\\'#@^&+-\"=]/]#&\\-(>,@<[@`;]##/<:,&-&\"./[%-\\;?|>*=-<^)=+$}|'}*|),.<:_/\"|+|_}>=:|%_|]+$+<!)<#-{(/./>)^%@;[(%`.&/-#[\\#~/<,'*``\\{?%.*\"-:?/]\\&^|&[]~|?(<#'/$%}{^?\"~:^~_@",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "c4GJ53mB1CKmZCXr50f8gOh4wiOcFgvH1NxrhjHKAEvGEVskW4JEbp9olVdjgXog3SGUGVTJBs5eGqAgVwGWA5rrkxAGv2Azkx87yjDaGGQotWhRLX5CfhzuBRf5cSbdoWI0YJjxkBTBsXqgz2S3XDQt0SzI5f4cR3aN5BZwRQujAID40GvPOb1JGAainYJRlpj1VatzDyd42QjSPyedpsR0kvrIChqMt46TRcV0gjn4KKlNK8ZTbiuz8ahbNpF6",
        "description": "Exceeds maximum length of 255 characters"
      },
      "invalid_length_indicator": {
        "value": "2564IQ111LItwDqXA5hEMN5x8OXteIlAXtX8GXSBveacdOMQ9E0B7qrG6LfWbqklnRJd3nQL1bSKT7epcawuGtdiixpcYWqHj5zISgcG9OQiU8tbfXXFDvgz6LNd0iD6UpY7CywHPItnen0zvpfEiJJhOBhud8qlZVn5BijDtaF2Okgvoyo7SVZmdd0aWzx5WyGBitoE4p9nCrXvA3iusPsdWIb8H78iJvZEJCblTO9DyMZQX6sjVFETq6pYYCJyC4",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "4IQ111LItwDqXA5hEMN5x8OXteIlAXtX8GXSBveacdOMQ9E0B7qrG6LfWbqklnRJd3nQL1bSKT7epcawuGtdiixpcYWqHj5zISgcG9OQiU8tbfXXFDvgz6LNd0iD6UpY7CywHPItnen0zvpfEiJJhOBhud8qlZVn5BijDtaF2Okgvoyo7SVZmdd0aWzx5WyGBitoE4p9nCrXvA3iusPsdWIb8H78iJvZEJCblTO9DyMZQX6sjVFETq6pYYCJyC4",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 255,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 255 characters with lllvar length indicator"
    },
    "validExample": "024YBp9yKDFvsuU6fLqsSWRm9M1"
  },
  "126": {
    "name": "Issuer Trace Data",
    "format": "lllvar",
    "max_length": 100,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026TDI11111111111111111MAX100",
    "notes": "Optional for Mastercard Networks Exchange ISO acquirers.",
    "testCases": {
      "invalid_special_chars": {
        "value": "!_.{+!|]`[?(<%<--/&'&<{^&\",,(@>&|{@+=|/-,;$\\!'\"${.~*\\[|@?`&|[\"[{)([$?$>+?,.$@]\"~^)%@.~\\%-.%%*[$!,/+>",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "k2xWkxwP4ueAryepxFJ68WjUEhZ6i8DftAGgKdCdRvurjqO3kVwBzVJ8Z1cwEWW5hWZG7cpGexuf8AHXceqsKQf00E511pEJjCXyU",
        "description": "Exceeds maximum length of 100 characters"
      },
      "invalid_length_indicator": {
        "value": "101PY6zjaUNxqVFa6S6njyZB2Pr0XRFhRZifdtAYSbvqiUprv1CQcGwQcvrFTKP5WVuIPVj1iM7Q6tjgCNRiAxLqqlFshgi171K0mUd",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "PY6zjaUNxqVFa6S6njyZB2Pr0XRFhRZifdtAYSbvqiUprv1CQcGwQcvrFTKP5WVuIPVj1iM7Q6tjgCNRiAxLqqlFshgi171K0mUd",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 100,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 100 characters with lllvar length indicator"
    },
    "validExample": "018AwLUojVrmNEoy8X1cy"
  },
  "127": {
    "name": "Acquirer Trace Data",
    "format": "lllvar",
    "max_length": 100,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "AB123",
    "notes": "Optional for Mastercard Networks Exchange ISO acquirers. Not passed by default to ISO issuers but can be configured.",
    "testCases": {
      "invalid_special_chars": {
        "value": "$_;^;)+>>[+%]{>^)$>_*,@<&!}<#]%%.=-\\*_$?=<+,][{._*)$*)#\"\\:_]/-\"\\(_?[\"+[`!_*:,@;-(\\`^^/'~><&;<(:/+!?[",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "nJ1aLrLnURGFjoC6Pe6cV1sIxL1u2i3G06e1xSA0CXvUXBS0DtZOJuWe84CGwRp1liM72ynLHViZ1KDtlc1aS7NfOHwoIlVGQKtwg",
        "description": "Exceeds maximum length of 100 characters"
      },
      "invalid_length_indicator": {
        "value": "101pVhv19a38cBVg0b2uLwDXn2YIzOEfl5YkEl8tEmdXJTPfS06ULCSzfE7w0D7aqujrHkenq4DLb7SmfLLYUlsjtpmat8rj74g99Dn",
        "description": "Length indicator doesn't match actual data length"
      },
      "missing_length_indicator": {
        "value": "pVhv19a38cBVg0b2uLwDXn2YIzOEfl5YkEl8tEmdXJTPfS06ULCSzfE7w0D7aqujrHkenq4DLb7SmfLLYUlsjtpmat8rj74g99Dn",
        "description": "Missing length indicator"
      },
      "zero_length": {
        "value": "000",
        "description": "Zero length indicator"
      }
    },
    "validationRules": {
      "maxLength": 100,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 100 characters with lllvar length indicator"
    },
    "validExample": "0527JgrL3IejcUiSUFAInntINN2fJkAiek6glVH2NqnBh0oaTytaPJU"
  },
  "128": {
    "name": "Message Authenticate Code",
    "format": "fixed",
    "length": 64,
    "type": "binary",
    "active": false,
    "SampleData": "1000001000111010101001100101011001000111100000000010110110100011",
    "notes": "Required when MACing messages, at least one DE between 65-127 is present, and no DEs between 129-191 are present.",
    "testCases": {
      "invalid_type": {
        "value": "Q15uq00QtHsR5jJAngFYX2gOCZMVyQH06StePrW6j06hhIogYaW4UicBRCR34wMx",
        "description": "Contains non-binary characters"
      },
      "invalid_binary_chars": {
        "value": "7769893323884747697348889635472836657926356422485554295952845454",
        "description": "Contains non-binary digits (not 0 or 1)"
      },
      "invalid_length_short": {
        "value": "nk2siM2SJDlY4FuLSpwN1iIKodySCb4wudbIOl577IiHfmyssV3sae0uPJfc5tr",
        "description": "Length shorter than required 64 characters"
      },
      "invalid_length_long": {
        "value": "rrQRuyU6P9yntBhLgpyNjVFbql3W5Xnva0QuHnFXWyI6tCnjbFIyj5The8D74CzpP",
        "description": "Length longer than required 64 characters"
      }
    },
    "validationRules": {
      "exactLength": 64,
      "allowedChars": "0-1",
      "description": "Must be exactly 64 characters long with binary characters"
    },
    "validExample": "1110010000111000001001101101101000101100001010100000001110000101"
  }
}