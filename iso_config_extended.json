{
  "MTI": {
    "name": "Message Type Indicator",
    "format": "fixed",
    "length": 4,
    "type": "numeric",
    "active": false,
    "SampleData": "0100",
    "notes": "Indicates the type of message being sent. Examples: 0100 - Auth Request, 0200 - Financial Transaction Request, 0420 - Reversal Request.",
    "testCases": {
      "invalid_type": {
        "value": "OjaA",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "[%$~",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "482",
        "description": "Length shorter than required 4 characters"
      },
      "invalid_length_long": {
        "value": "99515",
        "description": "Length longer than required 4 characters"
      }
    },
    "validationRules": {
      "exactLength": 4,
      "allowedChars": "0-9",
      "description": "Must be exactly 4 characters long with numeric characters"
    },
    "validExample": "3163"
  },
  "PrimaryBitmap": {
    "name": "Primary Bitmap",
    "format": "bitmap",
    "length": 64,
    "type": "hex",
    "active": false,
    "SampleData": "A1B2C3D4E5F6A7B8",
    "notes": "Each bit corresponds to a specific data element (1-64). If a bit is set to 1, the corresponding data element must be present. Presence of Secondary Bitmap is indicated by the first bit.",
    "testCases": {
      "invalid_type": {
        "value": "{OGX:YWVX+<DW?YIY/[?-hlZt//jDhh\"JwBC$l#nYq*g|g*i^`Y+N<Cx@Wh$pOZ{",
        "description": "Contains non-hexadecimal characters"
      },
      "invalid_hex_chars": {
        "value": "ZHLWNGKPTMTIHYQTLXVKYUNWGRJJZKVHZLKWLLPZKTPVTGZVSSUMYMWKJRYILGNL",
        "description": "Contains invalid hexadecimal letters"
      },
      "invalid_bitmap_format": {
        "value": "JtFyO2jemYRrbkYk3ql74iEF3CJGTzUuaRSkeEQSitQJbmUw8MwX6vAVUy6bmDr5",
        "description": "Invalid bitmap format"
      },
      "invalid_bitmap_length": {
        "value": "00101000010001100001100111000001110011100110110010001101",
        "description": "Invalid bitmap length"
      }
    }
  },
  "SecondaryBitmap": {
    "name": "Secondary Bitmap",
    "format": "bitmap",
    "length": 64,
    "type": "hex",
    "active": false,
    "SampleData": "B1B2C3D4E5F6A7B8",
    "notes": "Used if data elements 65-128 are present. The primary bitmap's first bit must be set to 1 if this is included.",
    "testCases": {
      "invalid_type": {
        "value": "h\\-}~(i>$UqEwZlI.qOSVEGk,!M&B}*T$o[#HPr`=XB=r.+D{/%|t\\q\\=[lTSjUi",
        "description": "Contains non-hexadecimal characters"
      },
      "invalid_hex_chars": {
        "value": "ZLYGHYGIJWZUWSTJPXUULMTHXVLWSGIQUGWSJZGOKIRJTWITVVPGIIWWSXRTPRZQ",
        "description": "Contains invalid hexadecimal letters"
      },
      "invalid_bitmap_format": {
        "value": "WVQtypyO0WiHqYfwTiYBKyvk47gB7GikR72oh50juJb86XUCPt7ZdpXLazJue0L3",
        "description": "Invalid bitmap format"
      },
      "invalid_bitmap_length": {
        "value": "01000100000111000010101001101000100011110101110011110100",
        "description": "Invalid bitmap length"
      }
    }
  },
  "2": {
    "name": "Primary Account Number (PAN)",
    "format": "llvar",
    "max_length": 19,
    "type": "numeric",
    "active": false,
    "SampleData": "5314451120000000",
    "notes": "Should be validated using Luhn's check (mod 10). Must be encrypted and tokenized if present. Required for manually entered PANs or when track data is not available.",
    "testCases": {
      "invalid_type": {
        "value": "OgvtqjKRPGacaCtlznf",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "=,_~$[{;-\\)_`_\"='~\"",
        "description": "Contains special characters"
      },
      "invalid_length_exceed_max": {
        "value": "32734167448807118749",
        "description": "Raw data exceeds maximum length of 19 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 19,
      "lengthIndicatorSize": 2,
      "allowedChars": "0-9",
      "description": "Variable length up to 19 characters with llvar length indicator",
      "formatExample": {
        "raw": "8186441804",
        "formatted": "108186441804",
        "explanation": "Length indicator '10' + raw data '8186441804'"
      }
    },
    "validExampleRaw": "8186441804",
    "validExample": "108186441804"
  },
  "3": {
    "name": "Processing Code",
    "format": "fixed",
    "length": 6,
    "type": "numeric",
    "active": false,
    "SampleData": "000000",
    "notes": "Defines transaction type and account information. Example: 000000 - Debit, 200000 - Credit (refund). First 2 digits indicate transaction type, next 2 indicate from account, and last 2 indicate to account.",
    "testCases": {
      "invalid_type": {
        "value": "RiWqjT",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "\\>{-&?",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "92132",
        "description": "Length shorter than required 6 characters"
      },
      "invalid_length_long": {
        "value": "7255471",
        "description": "Length longer than required 6 characters"
      }
    },
    "validationRules": {
      "exactLength": 6,
      "allowedChars": "0-9",
      "description": "Must be exactly 6 characters long with numeric characters"
    },
    "validExample": "137338"
  },
  "4": {
    "name": "Amount, Transaction",
    "format": "fixed",
    "length": 12,
    "type": "numeric",
    "active": false,
    "SampleData": "000000020000",
    "notes": "Represents the transaction amount in fixed length, padded with zeros. Last 2 digits represent decimal places.",
    "testCases": {
      "invalid_type": {
        "value": "EcQhoIXoKMma",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "#`+;>`_}~=@\"",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "91298957213",
        "description": "Length shorter than required 12 characters"
      },
      "invalid_length_long": {
        "value": "3897104262742",
        "description": "Length longer than required 12 characters"
      }
    },
    "validationRules": {
      "exactLength": 12,
      "allowedChars": "0-9",
      "description": "Must be exactly 12 characters long with numeric characters"
    },
    "validExample": "284293656933"
  },
  "5": {
    "name": "Amount, Settlement",
    "format": "fixed",
    "length": 12,
    "type": "numeric",
    "active": false,
    "SampleData": "000000030000",
    "notes": "Required if the transaction and settlement currencies are different. Not applicable for domestic transactions.",
    "testCases": {
      "invalid_type": {
        "value": "IePKnjFjsLux",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "\\/`'&$=-/-!%",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "94195714985",
        "description": "Length shorter than required 12 characters"
      },
      "invalid_length_long": {
        "value": "3175271622008",
        "description": "Length longer than required 12 characters"
      }
    },
    "validationRules": {
      "exactLength": 12,
      "allowedChars": "0-9",
      "description": "Must be exactly 12 characters long with numeric characters"
    },
    "validExample": "177437273849"
  },
  "6": {
    "name": "Amount, Cardholder Billing",
    "format": "fixed",
    "length": 12,
    "type": "numeric",
    "active": false,
    "SampleData": "000000040000",
    "notes": "Required if the cardholder and settlement currencies are different. Includes fees from MasterCard.",
    "testCases": {
      "invalid_type": {
        "value": "jLnkJekNHYCs",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "_'\\$?.++<=|@",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "92407247484",
        "description": "Length shorter than required 12 characters"
      },
      "invalid_length_long": {
        "value": "6060582788213",
        "description": "Length longer than required 12 characters"
      }
    },
    "validationRules": {
      "exactLength": 12,
      "allowedChars": "0-9",
      "description": "Must be exactly 12 characters long with numeric characters"
    },
    "validExample": "095560896777"
  },
  "7": {
    "name": "Transmission Date and Time",
    "format": "fixed",
    "length": 10,
    "type": "numeric",
    "active": false,
    "SampleData": "0329150405",
    "notes": "Format: MMDDhhmmss. Must be a valid date and time expressed in GMT.",
    "testCases": {
      "invalid_type": {
        "value": "YSFTKcOCGK",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "~^']^|-{\\.",
        "description": "Contains special characters"
      },
      "invalid_datetime": {
        "value": "1335251060",
        "description": "Invalid date and time value"
      },
      "invalid_length_short": {
        "value": "145122522",
        "description": "Length shorter than required 10 characters"
      },
      "invalid_length_long": {
        "value": "53724326853",
        "description": "Length longer than required 10 characters"
      }
    },
    "validationRules": {
      "exactLength": 10,
      "allowedChars": "0-9",
      "description": "Must be exactly 10 characters long with numeric characters",
      "isDateTime": true,
      "format": "MMDDhhmmss"
    },
    "validExample": "0329150405"
  },
  "8": {
    "name": "Amount, Cardholder Billing Fee",
    "format": "fixed",
    "length": 8,
    "type": "numeric",
    "active": false,
    "SampleData": "01000000",
    "notes": "Required only if requested by the issuer. Not expected for domestic transactions.",
    "testCases": {
      "invalid_type": {
        "value": "nZnlMfPH",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": ",,}>`.,|",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "2578366",
        "description": "Length shorter than required 8 characters"
      },
      "invalid_length_long": {
        "value": "129309287",
        "description": "Length longer than required 8 characters"
      }
    },
    "validationRules": {
      "exactLength": 8,
      "allowedChars": "0-9",
      "description": "Must be exactly 8 characters long with numeric characters"
    },
    "validExample": "21021464"
  },
  "9": {
    "name": "Conversion Rate, Settlement",
    "format": "fixed",
    "length": 8,
    "type": "numeric",
    "active": false,
    "SampleData": "02000000",
    "notes": "Required if the transaction and settlement currencies are different. Not applicable for domestic transactions.",
    "testCases": {
      "invalid_type": {
        "value": "JqhMYjBg",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "<;?[?_'!",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "6579759",
        "description": "Length shorter than required 8 characters"
      },
      "invalid_length_long": {
        "value": "766039295",
        "description": "Length longer than required 8 characters"
      }
    },
    "validationRules": {
      "exactLength": 8,
      "allowedChars": "0-9",
      "description": "Must be exactly 8 characters long with numeric characters"
    },
    "validExample": "26151852"
  },
  "10": {
    "name": "Conversion Rate, Cardholder Billing",
    "format": "fixed",
    "length": 8,
    "type": "numeric",
    "active": false,
    "SampleData": "03000000",
    "notes": "Required if the cardholder and settlement currencies are different. Not applicable for domestic transactions.",
    "testCases": {
      "invalid_type": {
        "value": "dxnnzNUV",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": ")>;($(?@",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "2617932",
        "description": "Length shorter than required 8 characters"
      },
      "invalid_length_long": {
        "value": "373238242",
        "description": "Length longer than required 8 characters"
      }
    },
    "validationRules": {
      "exactLength": 8,
      "allowedChars": "0-9",
      "description": "Must be exactly 8 characters long with numeric characters"
    },
    "validExample": "73030615"
  },
  "11": {
    "name": "System Trace Audit Number",
    "format": "fixed",
    "length": 6,
    "type": "numeric",
    "active": false,
    "SampleData": "130644",
    "notes": "Generated by the acquirer/merchant and ensures uniqueness for the day. Combined with other identifiers for global uniqueness.",
    "testCases": {
      "invalid_type": {
        "value": "CUoQjJ",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "!<~~`{",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "10330",
        "description": "Length shorter than required 6 characters"
      },
      "invalid_length_long": {
        "value": "4657545",
        "description": "Length longer than required 6 characters"
      }
    },
    "validationRules": {
      "exactLength": 6,
      "allowedChars": "0-9",
      "description": "Must be exactly 6 characters long with numeric characters"
    },
    "validExample": "209150"
  },
  "12": {
    "name": "Time, Local Transaction",
    "format": "fixed",
    "length": 6,
    "type": "numeric",
    "active": false,
    "SampleData": "150405",
    "notes": "Format: hhmmss. Must be a valid time. Checked against issuer's system time for variance.",
    "testCases": {
      "invalid_type": {
        "value": "WqbWvI",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "\"/\":$'",
        "description": "Contains special characters"
      },
      "invalid_time": {
        "value": "251060",
        "description": "Invalid time value (invalid minutes)"
      },
      "invalid_length_short": {
        "value": "27344",
        "description": "Length shorter than required 6 characters"
      },
      "invalid_length_long": {
        "value": "2614397",
        "description": "Length longer than required 6 characters"
      }
    },
    "validationRules": {
      "exactLength": 6,
      "allowedChars": "0-9",
      "description": "Must be exactly 6 characters long with numeric characters",
      "isDateTime": true,
      "format": "hhmmss"
    },
    "validExample": "150405"
  },
  "13": {
    "name": "Date, Local Transaction",
    "format": "fixed",
    "length": 4,
    "type": "numeric",
    "active": false,
    "SampleData": "0329",
    "notes": "Format: MMDD. Must be a valid date. Checked against issuer's system time for variance.",
    "testCases": {
      "invalid_type": {
        "value": "YhPn",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "\".\"^",
        "description": "Contains special characters"
      },
      "invalid_date": {
        "value": "1332",
        "description": "Invalid date value (invalid month)"
      },
      "invalid_length_short": {
        "value": "681",
        "description": "Length shorter than required 4 characters"
      },
      "invalid_length_long": {
        "value": "75240",
        "description": "Length longer than required 4 characters"
      }
    },
    "validationRules": {
      "exactLength": 4,
      "allowedChars": "0-9",
      "description": "Must be exactly 4 characters long with numeric characters",
      "isDateTime": true,
      "format": "MMDD"
    },
    "validExample": "0329"
  },
  "14": {
    "name": "Date, Expiration",
    "format": "fixed",
    "length": 4,
    "type": "numeric",
    "active": false,
    "SampleData": "0231",
    "notes": "Format: YYMM. Used along with DE 2 to validate the card.",
    "testCases": {
      "invalid_type": {
        "value": "iWkZ",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "[=.,",
        "description": "Contains special characters"
      },
      "invalid_date": {
        "value": "1332",
        "description": "Invalid date value (invalid month)"
      },
      "invalid_length_short": {
        "value": "399",
        "description": "Length shorter than required 4 characters"
      },
      "invalid_length_long": {
        "value": "23710",
        "description": "Length longer than required 4 characters"
      }
    },
    "validationRules": {
      "exactLength": 4,
      "allowedChars": "0-9",
      "description": "Must be exactly 4 characters long with numeric characters",
      "isDateTime": true,
      "format": "MMDD"
    },
    "validExample": "0231"
  },
  "15": {
    "name": "Date, Settlement",
    "format": "fixed",
    "length": 4,
    "type": "numeric",
    "active": false,
    "SampleData": "0331",
    "notes": "Format: MMDD. Must be a valid date. Checked against issuer's system time for variance.",
    "testCases": {
      "invalid_type": {
        "value": "Enoi",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "}-|@",
        "description": "Contains special characters"
      },
      "invalid_date": {
        "value": "1332",
        "description": "Invalid date value (invalid month)"
      },
      "invalid_length_short": {
        "value": "648",
        "description": "Length shorter than required 4 characters"
      },
      "invalid_length_long": {
        "value": "29294",
        "description": "Length longer than required 4 characters"
      }
    },
    "validationRules": {
      "exactLength": 4,
      "allowedChars": "0-9",
      "description": "Must be exactly 4 characters long with numeric characters",
      "isDateTime": true,
      "format": "MMDD"
    },
    "validExample": "0331"
  },
  "17": {
    "name": "Date, Capture",
    "format": "fixed",
    "length": 4,
    "type": "numeric",
    "active": false,
    "SampleData": "0431",
    "notes": "Required if requested by the issuer. Format: MMDD.",
    "testCases": {
      "invalid_type": {
        "value": "vjps",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "_|)*",
        "description": "Contains special characters"
      },
      "invalid_date": {
        "value": "1332",
        "description": "Invalid date value (invalid month)"
      },
      "invalid_length_short": {
        "value": "001",
        "description": "Length shorter than required 4 characters"
      },
      "invalid_length_long": {
        "value": "88104",
        "description": "Length longer than required 4 characters"
      }
    },
    "validationRules": {
      "exactLength": 4,
      "allowedChars": "0-9",
      "description": "Must be exactly 4 characters long with numeric characters",
      "isDateTime": true,
      "format": "MMDD"
    },
    "validExample": "0431"
  },
  "18": {
    "name": "Merchant Type",
    "format": "fixed",
    "length": 4,
    "type": "numeric",
    "active": false,
    "SampleData": "1313",
    "notes": "Validates against a list of accepted Merchant Category Codes (MCCs).",
    "testCases": {
      "invalid_type": {
        "value": "QBKB",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "=%\\)",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "392",
        "description": "Length shorter than required 4 characters"
      },
      "invalid_length_long": {
        "value": "08541",
        "description": "Length longer than required 4 characters"
      }
    },
    "validationRules": {
      "exactLength": 4,
      "allowedChars": "0-9",
      "description": "Must be exactly 4 characters long with numeric characters"
    },
    "validExample": "8471"
  },
  "19": {
    "name": "Acquiring Institution Country Code",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "001",
    "notes": "Only received if acquirer and issuer are in different countries. Decline if received other than USA.",
    "testCases": {
      "invalid_type": {
        "value": "nyq",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "=.+",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "36",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "1927",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "151"
  },
  "20": {
    "name": "Primary Account Number (PAN) Extended Country Code",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "USA",
    "notes": "Required if DE 34 (PAN Extended) is sent. Not applicable for MVP.",
    "testCases": {
      "invalid_type": {
        "value": "NFh",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "-+?",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "39",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "2274",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "298"
  },
  "21": {
    "name": "Forwarding Institution Country Code",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "001",
    "notes": "Only received if acquirer and issuer are in different countries. Decline if received other than USA.",
    "testCases": {
      "invalid_type": {
        "value": "cIr",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "[(\\",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "65",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "8717",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "557"
  },
  "22": {
    "name": "Point-of-Service Entry Mode",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "002",
    "notes": "Indicates how card data was captured. Examples: 01X - Manual entry, 02X - Card swipe, 06X - Card swipe with PIN, 09X - eCommerce.",
    "testCases": {
      "invalid_type": {
        "value": "zMw",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "-;:",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "71",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "4962",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "374"
  },
  "23": {
    "name": "Card Sequence Number",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "022",
    "notes": "Sent only if track data is not sent for POS transactions and one PAN has multiple cards.",
    "testCases": {
      "invalid_type": {
        "value": "GdL",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "{{>",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "08",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "3047",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "790"
  },
  "25": {
    "name": "Point-of-Service Condition Code",
    "format": "fixed",
    "length": 2,
    "type": "numeric",
    "active": false,
    "SampleData": "022",
    "notes": "No specific validation required. Optional field.",
    "testCases": {
      "invalid_type": {
        "value": "sX",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": ":?",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "4",
        "description": "Length shorter than required 2 characters"
      },
      "invalid_length_long": {
        "value": "555",
        "description": "Length longer than required 2 characters"
      }
    },
    "validationRules": {
      "exactLength": 2,
      "allowedChars": "0-9",
      "description": "Must be exactly 2 characters long with numeric characters"
    },
    "validExample": "81"
  },
  "26": {
    "name": "Point-of-Service PIN Capture Code",
    "format": "fixed",
    "length": 2,
    "type": "numeric",
    "active": false,
    "SampleData": "11",
    "notes": "Indicates the PIN block. Ignored in production unless certification requires it.",
    "testCases": {
      "invalid_type": {
        "value": "Bz",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "/{",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "2",
        "description": "Length shorter than required 2 characters"
      },
      "invalid_length_long": {
        "value": "428",
        "description": "Length longer than required 2 characters"
      }
    },
    "validationRules": {
      "exactLength": 2,
      "allowedChars": "0-9",
      "description": "Must be exactly 2 characters long with numeric characters"
    },
    "validExample": "83"
  },
  "27": {
    "name": "Authorization Identification Response Length",
    "format": "fixed",
    "length": 1,
    "type": "numeric",
    "active": false,
    "SampleData": "1",
    "notes": "Used by acquirers that cannot accept 6-byte values in DE 38. Ignored if present.",
    "testCases": {
      "invalid_type": {
        "value": "a",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "@",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "",
        "description": "Length shorter than required 1 characters"
      },
      "invalid_length_long": {
        "value": "87",
        "description": "Length longer than required 1 characters"
      }
    },
    "validationRules": {
      "exactLength": 1,
      "allowedChars": "0-9",
      "description": "Must be exactly 1 characters long with numeric characters"
    },
    "validExample": "4"
  },
  "28": {
    "name": "Amount, Transaction Fee",
    "format": "fixed",
    "length": 9,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "C00000050",
    "notes": "Required when DE 30 is present. Indicates surcharge, rebate, or transaction fee.",
    "testCases": {
      "invalid_special_chars": {
        "value": "{{_}/<;].",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "5q62py74",
        "description": "Length shorter than required 9 characters"
      },
      "invalid_length_long": {
        "value": "4Ns6CyfsE4",
        "description": "Length longer than required 9 characters"
      }
    },
    "validationRules": {
      "exactLength": 9,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 9 characters long with alphanumeric characters"
    },
    "validExample": "hSFMF7hL9"
  },
  "29": {
    "name": "Amount, Settlement Fee",
    "format": "fixed",
    "length": 9,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "D00000060",
    "notes": "Required if the transaction and settlement currencies are different. Not applicable for domestic transactions.",
    "testCases": {
      "invalid_special_chars": {
        "value": "=.$+?\"|\"(",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "iL8eYaYx",
        "description": "Length shorter than required 9 characters"
      },
      "invalid_length_long": {
        "value": "xpxC1mZ0p5",
        "description": "Length longer than required 9 characters"
      }
    },
    "validationRules": {
      "exactLength": 9,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 9 characters long with alphanumeric characters"
    },
    "validExample": "qRzRHUbgS"
  },
  "30": {
    "name": "Amount, Transaction Processing Fee",
    "format": "fixed",
    "length": 9,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "C00000070",
    "notes": "Required if requested by the issuer. No specific validation required.",
    "testCases": {
      "invalid_special_chars": {
        "value": "')-?]~?{<",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "DHAmoSOl",
        "description": "Length shorter than required 9 characters"
      },
      "invalid_length_long": {
        "value": "6nNWqyU1ud",
        "description": "Length longer than required 9 characters"
      }
    },
    "validationRules": {
      "exactLength": 9,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 9 characters long with alphanumeric characters"
    },
    "validExample": "gKd8iWr0b"
  },
  "31": {
    "name": "Amount, Settlement Processing Fee",
    "format": "fixed",
    "length": 9,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "C00000070",
    "notes": "Required if requested by the issuer. No specific validation required.",
    "testCases": {
      "invalid_special_chars": {
        "value": "#?'\":?[:;",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "hb0lBGHl",
        "description": "Length shorter than required 9 characters"
      },
      "invalid_length_long": {
        "value": "2CYilXyTj3",
        "description": "Length longer than required 9 characters"
      }
    },
    "validationRules": {
      "exactLength": 9,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 9 characters long with alphanumeric characters"
    },
    "validExample": "9NcStJ4IG"
  },
  "32": {
    "name": "Acquiring Institution Identification Code",
    "format": "llvar",
    "max_length": 11,
    "type": "numeric",
    "active": false,
    "SampleData": "21089211169",
    "notes": "Critical for MID adjudication. Format: 1NNNNNNNNC or 59NNNNNNNNC. Check digit must be validated.",
    "testCases": {
      "invalid_type": {
        "value": "KxHzwLtUkNE",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": ")+~\"_#?(`}\\",
        "description": "Contains special characters"
      },
      "invalid_length_exceed_max": {
        "value": "463400361483",
        "description": "Raw data exceeds maximum length of 11 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 11,
      "lengthIndicatorSize": 2,
      "allowedChars": "0-9",
      "description": "Variable length up to 11 characters with llvar length indicator",
      "formatExample": {
        "raw": "49456796",
        "formatted": "0849456796",
        "explanation": "Length indicator '08' + raw data '49456796'"
      }
    },
    "validExampleRaw": "49456796",
    "validExample": "0849456796"
  },
  "33": {
    "name": "Forwarding Institution Identification Code",
    "format": "llvar",
    "max_length": 11,
    "type": "numeric",
    "active": false,
    "SampleData": "09111111111",
    "notes": "Optional field. No specific validation required.",
    "testCases": {
      "invalid_type": {
        "value": "UZYUPBedzmN",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "@/%~;%@%},<",
        "description": "Contains special characters"
      },
      "invalid_length_exceed_max": {
        "value": "685443656967",
        "description": "Raw data exceeds maximum length of 11 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 11,
      "lengthIndicatorSize": 2,
      "allowedChars": "0-9",
      "description": "Variable length up to 11 characters with llvar length indicator",
      "formatExample": {
        "raw": "9904",
        "formatted": "049904",
        "explanation": "Length indicator '04' + raw data '9904'"
      }
    },
    "validExampleRaw": "9904",
    "validExample": "049904"
  },
  "34": {
    "name": "Primay Account Number (PAN) Extended",
    "format": "llvar",
    "max_length": 28,
    "type": "numeric",
    "active": false,
    "SampleData": "2611111111111111111111111111",
    "notes": "Optional field. No specific validation required.",
    "testCases": {
      "invalid_type": {
        "value": "WKbfZAPLhfvSmMfVtCVoFKrKxoMr",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "^;^`(.+)\\*_~.%>|@'[]//=\"'(<^",
        "description": "Contains special characters"
      },
      "invalid_length_exceed_max": {
        "value": "00914512749745941141268634642",
        "description": "Raw data exceeds maximum length of 28 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 28,
      "lengthIndicatorSize": 2,
      "allowedChars": "0-9",
      "description": "Variable length up to 28 characters with llvar length indicator",
      "formatExample": {
        "raw": "691873411317",
        "formatted": "12691873411317",
        "explanation": "Length indicator '12' + raw data '691873411317'"
      }
    },
    "validExampleRaw": "691873411317",
    "validExample": "12691873411317"
  },
  "35": {
    "name": "Track 2 Data",
    "format": "llvar",
    "max_length": 37,
    "type": "alphanumeric",
    "active": false,
    "SampleData": ";5314451120000000=2812221711760?",
    "notes": "Required if DE 22 value is 02 or 06. Not applicable for manual entry transactions.",
    "testCases": {
      "invalid_special_chars": {
        "value": "`\"!*+#`{`$-$,),$_.)^^'!{[!^>@:*$+'|!#",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "FtaqvJ03HT3qmFcYSCclM747E9CPoJHh4JaPnz",
        "description": "Raw data exceeds maximum length of 37 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 37,
      "lengthIndicatorSize": 2,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 37 characters with llvar length indicator",
      "formatExample": {
        "raw": "M",
        "formatted": "01M",
        "explanation": "Length indicator '01' + raw data 'M'"
      }
    },
    "validExampleRaw": "M",
    "validExample": "01M"
  },
  "37": {
    "name": "Retrieval Reference Number",
    "format": "fixed",
    "length": 12,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "021700130644",
    "notes": "Generated by the acquirer and ensures uniqueness for the day. Combined with other identifiers for global uniqueness.",
    "testCases": {
      "invalid_special_chars": {
        "value": "]>@@.;{~.>([",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "ZR7lSEJX9FE",
        "description": "Length shorter than required 12 characters"
      },
      "invalid_length_long": {
        "value": "sGlAjVHKIKNxF",
        "description": "Length longer than required 12 characters"
      }
    },
    "validationRules": {
      "exactLength": 12,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 12 characters long with alphanumeric characters"
    },
    "validExample": "cIxzslztZSf6"
  },
  "38": {
    "name": "Authorization Identification Response",
    "format": "fixed",
    "length": 6,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "AIR111",
    "notes": "Populated by the issuer. May be pre-populated in advice messages.",
    "testCases": {
      "invalid_special_chars": {
        "value": "<<$!$`",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "viaS7",
        "description": "Length shorter than required 6 characters"
      },
      "invalid_length_long": {
        "value": "qSlzEwK",
        "description": "Length longer than required 6 characters"
      }
    },
    "validationRules": {
      "exactLength": 6,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 6 characters long with alphanumeric characters"
    },
    "validExample": "08S6Tj"
  },
  "39": {
    "name": "Response Code",
    "format": "fixed",
    "length": 3,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "RC1",
    "notes": "Indicates the result of the transaction. Example: '00' - Approved, '05' - Declined.",
    "testCases": {
      "invalid_special_chars": {
        "value": "&'!",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "7m",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "dfNU",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 3 characters long with alphanumeric characters"
    },
    "validExample": "6bw"
  },
  "40": {
    "name": "Service Restriction Code",
    "format": "fixed",
    "length": 3,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "SR1",
    "notes": "Optional field. No specific validation required.",
    "testCases": {
      "invalid_special_chars": {
        "value": "'#'",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "UR",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "rRGU",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 3 characters long with alphanumeric characters"
    },
    "validExample": "jha"
  },
  "41": {
    "name": "Card Acceptor Terminal Identification",
    "format": "fixed",
    "length": 8,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "ey5A3etE",
    "notes": "Used for fraud analysis and MID verification.",
    "testCases": {
      "invalid_special_chars": {
        "value": "<^>*;>`+",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "SFvKlEJ",
        "description": "Length shorter than required 8 characters"
      },
      "invalid_length_long": {
        "value": "a6GoEaik1",
        "description": "Length longer than required 8 characters"
      }
    },
    "validationRules": {
      "exactLength": 8,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 8 characters long with alphanumeric characters"
    },
    "validExample": "6RaFMiKb"
  },
  "42": {
    "name": "Card Acceptor Identification Code",
    "format": "fixed",
    "length": 15,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "ul3xfY8LZ1jCJdv",
    "notes": "Critical for MID-based adjudication. Default to MCC if not present for non-integrated merchants.",
    "testCases": {
      "invalid_special_chars": {
        "value": ">#\"#_[[%~`*${?~",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "WRTChorvXywnx7",
        "description": "Length shorter than required 15 characters"
      },
      "invalid_length_long": {
        "value": "O9MfHjd3lfOakWN7",
        "description": "Length longer than required 15 characters"
      }
    },
    "validationRules": {
      "exactLength": 15,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 15 characters long with alphanumeric characters"
    },
    "validExample": "DXVuvUp0iAqO86g"
  },
  "43": {
    "name": "Card Acceptor Name / Location",
    "format": "fixed",
    "length": 40,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "12345MainTownStreetRoadNewYork123456NYUS",
    "notes": "Critical for MID-based adjudication.",
    "testCases": {
      "invalid_special_chars": {
        "value": "*+{{>};`+%,`{%@\"#$@-,|`-.(=*/~{$|&'~+|!^",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "sQYWotcqy9RMu4Qq3S54mCdKk9wBJ0O5NMz6VsE",
        "description": "Length shorter than required 40 characters"
      },
      "invalid_length_long": {
        "value": "I1z7FBB5cAUpS5u5IdGzuVQ40Osd09Jh0MNwQU7gV",
        "description": "Length longer than required 40 characters"
      }
    },
    "validationRules": {
      "exactLength": 40,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 40 characters long with alphanumeric characters"
    },
    "validExample": "1Tos6A1kMJZoVEEYnLAF25DSUC6QeRuOxYBKPXuL"
  },
  "45": {
    "name": "Track 1 Data",
    "format": "llvar",
    "max_length": 76,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "12T1D525MAX076",
    "notes": "Not expected for MVP. Ignore if received.",
    "testCases": {
      "invalid_special_chars": {
        "value": ";}@*:)>`~+,{:(\"]$#])-!,_%}(;\\}<>^#},|/%;%$|*$/>](>}!)?.^\\'~^#-$;@;+(=<)`#,;^",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "muTGeAWs81CL32TeU25YE1jWOULlOxZC2F0SvSzQKTxTpjgZJHD4ULH8gMhotdq6b7ll7UPpKTsGi",
        "description": "Raw data exceeds maximum length of 76 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 76,
      "lengthIndicatorSize": 2,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 76 characters with llvar length indicator",
      "formatExample": {
        "raw": "Nir0F1d0gbFbRsHM1yKmgBonk5mWBhTabr12YV",
        "formatted": "38Nir0F1d0gbFbRsHM1yKmgBonk5mWBhTabr12YV",
        "explanation": "Length indicator '38' + raw data 'Nir0F1d0gbFbRsHM1yKmgBonk5mWBhTabr12YV'"
      }
    },
    "validExampleRaw": "Nir0F1d0gbFbRsHM1yKmgBonk5mWBhTabr12YV",
    "validExample": "38Nir0F1d0gbFbRsHM1yKmgBonk5mWBhTabr12YV"
  },
  "46": {
    "name": "Additional Fees",
    "format": "lllvar",
    "max_length": 88,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "013ABC1235MAX088",
    "notes": "Not expected for MVP. Pass to auth engine if received.",
    "testCases": {
      "invalid_special_chars": {
        "value": "#~#}^~@*[-`(\"')%*;.>&&>|}?$]\\:([.?=+(;}~`[[[&@/~~/#_~=<)|[+(!;^~$]`'*\\|]|>.[%&@].\\`*$#`_",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "a7PzUGxYlpvKLYXthhNDDkOEZ4CgXWFSy7ZRnQsPHoBljHS4R2i7YSbFltD5JNrJDmGAyJXfRn9vI1td8hET6Ber7",
        "description": "Raw data exceeds maximum length of 88 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 88,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 88 characters with lllvar length indicator",
      "formatExample": {
        "raw": "AJ7dj7k09mIjLFlk0ClabkXL4jE3h6CzbfIXvkReogbHvYqoE2LxIfk6K4RMdhRHL4KOqQhvDtN4Ps",
        "formatted": "078AJ7dj7k09mIjLFlk0ClabkXL4jE3h6CzbfIXvkReogbHvYqoE2LxIfk6K4RMdhRHL4KOqQhvDtN4Ps",
        "explanation": "Length indicator '078' + raw data 'AJ7dj7k09mIjLFlk0ClabkXL4jE3h6CzbfIXvkReogbHvYqoE2LxIfk6K4RMdhRHL4KOqQhvDtN4Ps'"
      }
    },
    "validExampleRaw": "AJ7dj7k09mIjLFlk0ClabkXL4jE3h6CzbfIXvkReogbHvYqoE2LxIfk6K4RMdhRHL4KOqQhvDtN4Ps",
    "validExample": "078AJ7dj7k09mIjLFlk0ClabkXL4jE3h6CzbfIXvkReogbHvYqoE2LxIfk6K4RMdhRHL4KOqQhvDtN4Ps"
  },
  "47": {
    "name": "Additional Data National",
    "format": "lllvar",
    "max_length": 100,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "020ABC12345678910MAX100",
    "notes": "Mainly used for 3DS authentication values. Ignore for MVP unless 3DS is supported.",
    "testCases": {
      "invalid_special_chars": {
        "value": "&>^;{#+:).(=?=;.:_/(\\}_|!!$&@\"{!<*#{-]:!+${*,++=#+=[})|:`]\"['+$\\_).}\\-@<$*]@__:!-(/!{?^]%/^.~-.=<&\\$",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "WNLL0tFYTnTnY6bOkkHKh7owEVOu2OEHWc1y470aT833Auc6n4yyFPkgqYWLxfxmJ92XI6OZvjESF9eGvaNARALCURhj2INh3ueKK",
        "description": "Raw data exceeds maximum length of 100 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 100,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 100 characters with lllvar length indicator",
      "formatExample": {
        "raw": "DWZvGpOyvpaGhNKBAuLIqhp2RX62MdwDd8PyMsSC60fE1XBmgy09irYYFWxWLaDX7fyzVOY7Qnx8GpxBbEjIfSwMTsfPrCTOLYdC",
        "formatted": "100DWZvGpOyvpaGhNKBAuLIqhp2RX62MdwDd8PyMsSC60fE1XBmgy09irYYFWxWLaDX7fyzVOY7Qnx8GpxBbEjIfSwMTsfPrCTOLYdC",
        "explanation": "Length indicator '100' + raw data 'DWZvGpOyvpaGhNKBAuLIqhp2RX62MdwDd8PyMsSC60fE1XBmgy09irYYFWxWLaDX7fyzVOY7Qnx8GpxBbEjIfSwMTsfPrCTOLYdC'"
      }
    },
    "validExampleRaw": "DWZvGpOyvpaGhNKBAuLIqhp2RX62MdwDd8PyMsSC60fE1XBmgy09irYYFWxWLaDX7fyzVOY7Qnx8GpxBbEjIfSwMTsfPrCTOLYdC",
    "validExample": "100DWZvGpOyvpaGhNKBAuLIqhp2RX62MdwDd8PyMsSC60fE1XBmgy09irYYFWxWLaDX7fyzVOY7Qnx8GpxBbEjIfSwMTsfPrCTOLYdC"
  },
  "48": {
    "name": "Institution/Merchant Name/Consumer Name",
    "format": "lllvar",
    "max_length": 25,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "13ABC1235MAX025",
    "notes": "Ignore if received as it contains unreliable consumer data.",
    "testCases": {
      "invalid_special_chars": {
        "value": "][.\",-`_{\"/;([*[@&&\\={+#.",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "4pQb1hX4yFEBq3N3OQVIBXZPW3",
        "description": "Raw data exceeds maximum length of 25 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 25,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 25 characters with lllvar length indicator",
      "formatExample": {
        "raw": "ZNeVs",
        "formatted": "005ZNeVs",
        "explanation": "Length indicator '005' + raw data 'ZNeVs'"
      }
    },
    "validExampleRaw": "ZNeVs",
    "validExample": "005ZNeVs"
  },
  "49": {
    "name": "Currency Code, Transaction",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "USD",
    "notes": "Must be USD for domestic transactions. Decline if any other currency code is received.",
    "testCases": {
      "invalid_type": {
        "value": "Khx",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "^{[",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "97",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "7533",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "830"
  },
  "50": {
    "name": "Currency Code, Settlement",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "001",
    "notes": "Not applicable for domestic transactions. Decline if received.",
    "testCases": {
      "invalid_type": {
        "value": "Ozc",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "{}+",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "38",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "0355",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "796"
  },
  "51": {
    "name": "Currency Code, Cardholder Billing",
    "format": "fixed",
    "length": 3,
    "type": "numeric",
    "active": false,
    "SampleData": "002",
    "notes": "Not applicable for domestic transactions. Decline if received.",
    "testCases": {
      "invalid_type": {
        "value": "aLy",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "<$:",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "32",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "8842",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "0-9",
      "description": "Must be exactly 3 characters long with numeric characters"
    },
    "validExample": "880"
  },
  "52": {
    "name": "Personal Identification Number (PIN) Data",
    "format": "fixed",
    "length": 64,
    "type": "binary",
    "active": false,
    "SampleData": "0011111100000111000000011011100011100001011010000001111111011100",
    "notes": "Ignored in production unless certification requires it. Send to C-Box for validation during certification.",
    "testCases": {
      "invalid_type": {
        "value": "PSqTx4cxXNAlyz2jTtSaOJqGhRRSOUUuxBGx2GZsnqYspYaC5xGNArvNbyxhk48U",
        "description": "Contains non-binary characters"
      },
      "invalid_binary_chars": {
        "value": "7264269796727628483452744994558553598689554627655435389633474392",
        "description": "Contains non-binary digits (not 0 or 1)"
      },
      "invalid_length_short": {
        "value": "3VrbwmyiUMuVwxsBMfL1U3ElWAAj3OxIbr7Zqkg5X1uET0B9itkRZ31XITrgLn7",
        "description": "Length shorter than required 64 characters"
      },
      "invalid_length_long": {
        "value": "nvkbHn9EGGTk4HHo30d24pmh5LwxCsYwnpbghq2F0PISPfOCe4VER89Mo659ix8sK",
        "description": "Length longer than required 64 characters"
      }
    },
    "validationRules": {
      "exactLength": 64,
      "allowedChars": "0-1",
      "description": "Must be exactly 64 characters long with binary characters"
    },
    "validExample": "0111000100011110011000001100001111101111011101101000001001110000"
  },
  "54": {
    "name": "Additional Amounts",
    "format": "lllvar",
    "max_length": 240,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "020ABC12345678910MAX240",
    "notes": "Used for healthcare transactions. Pass to auth engine if received.",
    "testCases": {
      "invalid_special_chars": {
        "value": "({>=>/*;,-%+'_~)@~{{%.$*,\\*,//)]))|\":-{-`!{}^=_!=]\"!}~|`!;&{{%'??}_+#%#@{*\\'`/:(!:^}*#?%`-!'_[-!>[.(;:~=@-,]_%,](+';\\$.!}>]/|&}}{$!!];.:,$|{~<[[),`}'_,%#^(\\#}<&;'=-%<@\"%@_+/;+.:]\\/.%\\:+*&(;'_**(#/[};\\/_%~|'}$\".:%[<<@%$.*-%+['<)_?;}/}({(=,&]",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "DQEUpGglXWpEOgTjEjRzwyhJdbEewnO4vEZN7U8w9jZhRILPaT8YsPggxu2LNyeuQVVc6qQ5fA9yIiBPj8r8umIn3oqh7qZLMK9OKErMmfST81yyds0RwpW1yjuzUfERqwsYfFwLIJgSFDL9mcL4WHoY5QDlj5ftNEVEixIpWOLgwS3MM8ALsHKul6emIKTUbJPos1KiU9pyIZe5RUPbcTvHa1zUlowf1MxsCbM4T3bHKfrU7",
        "description": "Raw data exceeds maximum length of 240 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 240,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 240 characters with lllvar length indicator",
      "formatExample": {
        "raw": "3EVithDu4YDB9QL5BmJu6HQjqpgZ5SrBqlnSQdR9fe3PdqOpoBBJOfeL66MfTxUoM652TkBd2gnrTvsSIQIxU8WzEqXGoq2w6xvbfXJOUit9qacsaMhHN7NOyO8BWkNUm1eW2q3qkgWmADF3rhrldeZuCm1uK1zcDZY6YS2wJ",
        "formatted": "1693EVithDu4YDB9QL5BmJu6HQjqpgZ5SrBqlnSQdR9fe3PdqOpoBBJOfeL66MfTxUoM652TkBd2gnrTvsSIQIxU8WzEqXGoq2w6xvbfXJOUit9qacsaMhHN7NOyO8BWkNUm1eW2q3qkgWmADF3rhrldeZuCm1uK1zcDZY6YS2wJ",
        "explanation": "Length indicator '169' + raw data '3EVithDu4YDB9QL5BmJu6HQjqpgZ5SrBqlnSQdR9fe3PdqOpoBBJOfeL66MfTxUoM652TkBd2gnrTvsSIQIxU8WzEqXGoq2w6xvbfXJOUit9qacsaMhHN7NOyO8BWkNUm1eW2q3qkgWmADF3rhrldeZuCm1uK1zcDZY6YS2wJ'"
      }
    },
    "validExampleRaw": "3EVithDu4YDB9QL5BmJu6HQjqpgZ5SrBqlnSQdR9fe3PdqOpoBBJOfeL66MfTxUoM652TkBd2gnrTvsSIQIxU8WzEqXGoq2w6xvbfXJOUit9qacsaMhHN7NOyO8BWkNUm1eW2q3qkgWmADF3rhrldeZuCm1uK1zcDZY6YS2wJ",
    "validExample": "1693EVithDu4YDB9QL5BmJu6HQjqpgZ5SrBqlnSQdR9fe3PdqOpoBBJOfeL66MfTxUoM652TkBd2gnrTvsSIQIxU8WzEqXGoq2w6xvbfXJOUit9qacsaMhHN7NOyO8BWkNUm1eW2q3qkgWmADF3rhrldeZuCm1uK1zcDZY6YS2wJ"
  },
  "55": {
    "name": "Integrated Chip Card (ICC) Data",
    "format": "lllvar",
    "max_length": 255,
    "type": "binary",
    "active": false,
    "SampleData": "110101110001101111100101111100011111010110100101111100110111000001000111101001101101100111101000110111110111100110100110000101101101000011000110010011111100011000001100010001010010001000101010101001111010100000011101101001110000100011000110101100100111101",
    "notes": "Decline with error code 12 if received, as EMV transactions are not supported in MVP.",
    "testCases": {
      "invalid_type": {
        "value": "4YhpQCa7CecMAuO8eb2wC1Du0NrirtoGpk3ne6cdzpOiGX0wcY2VsjNLAVzsi2hRw6U4D61hVEdYwpcQemaaitXthblt1rQIRYyRDuQHKVuENUwDzIHlX8S3NWsxMbNh6fifP1SeK8C9MTBo7h9mDZifG0YNwDFV4OsI1SYFGpn9lbuaWdzU2zMgsZiWzU0UxpXeuXX7U2dWY2H24MLuW1QXnxIiKSMbQyhqzbulAVLrWY0Pcj3UEWocYKvRKeO",
        "description": "Contains non-binary characters"
      },
      "invalid_binary_chars": {
        "value": "346788392369492499433248464497836856336884454568564929389975522385385647468729272957975375332766434856744632223674333858834724883883223344925289986499892829769555453545449659239527743555236335435652565366762987222763442828579633645547386428539874945294795",
        "description": "Contains non-binary digits (not 0 or 1)"
      },
      "invalid_length_exceed_max": {
        "value": "HGIUxHg8Oz6ZwRkx15J7dCwd7MJnnlupMNKxLK5sDoZCeUVNfCdjOCmgKJgiCbfngacvb0R0XKAByNwwtqeC9XJPQ3CETu9oncQNcKx1QAd0EtcDlUvBWMVOkmO44wmv5Mbg4mPSo0Uv6SuuYySIeThYj4yaYZZOE85okWs8zW1R3MAJrMOrsnTOAR0bBtTOS3Ux85yzaDofm4J8lRMiRBWWvHBYeGSn3zdiYGAhjBYSqrsVzVTkAtr0rTdFzHqT",
        "description": "Raw data exceeds maximum length of 255 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 255,
      "lengthIndicatorSize": 3,
      "allowedChars": "0-1",
      "description": "Variable length up to 255 characters with lllvar length indicator",
      "formatExample": {
        "raw": "XrArBHg4g1wStER6pkOlnt4JVESipJ4quWDuXsYJqzKZNJMPM815VDwMxR2kmwW24NhQyMgf01vMUGab7ORyd37FJCyfk4BsnBrF6szvQCY3mjJYqiF38JZxNcTonVT8MwbpZhXITRVh4Kx",
        "formatted": "143XrArBHg4g1wStER6pkOlnt4JVESipJ4quWDuXsYJqzKZNJMPM815VDwMxR2kmwW24NhQyMgf01vMUGab7ORyd37FJCyfk4BsnBrF6szvQCY3mjJYqiF38JZxNcTonVT8MwbpZhXITRVh4Kx",
        "explanation": "Length indicator '143' + raw data 'XrArBHg4g1wStER6pkOlnt4JVESipJ4quWDuXsYJqzKZNJMPM815VDwMxR2kmwW24NhQyMgf01vMUGab7ORyd37FJCyfk4BsnBrF6szvQCY3mjJYqiF38JZxNcTonVT8MwbpZhXITRVh4Kx'"
      }
    },
    "validExampleRaw": "XrArBHg4g1wStER6pkOlnt4JVESipJ4quWDuXsYJqzKZNJMPM815VDwMxR2kmwW24NhQyMgf01vMUGab7ORyd37FJCyfk4BsnBrF6szvQCY3mjJYqiF38JZxNcTonVT8MwbpZhXITRVh4Kx",
    "validExample": "143XrArBHg4g1wStER6pkOlnt4JVESipJ4quWDuXsYJqzKZNJMPM815VDwMxR2kmwW24NhQyMgf01vMUGab7ORyd37FJCyfk4BsnBrF6szvQCY3mjJYqiF38JZxNcTonVT8MwbpZhXITRVh4Kx"
  },
  "57": {
    "name": "Authorization Life Cycle",
    "format": "lllvar",
    "max_length": 3,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "200",
    "notes": "Critical for fraud analysis. Values: 200 - Previous Auth Completion, 600 - PreAuth completion.",
    "testCases": {
      "invalid_special_chars": {
        "value": "*:{",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "GWzQ",
        "description": "Raw data exceeds maximum length of 3 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 3,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 3 characters with lllvar length indicator",
      "formatExample": {
        "raw": "kRw",
        "formatted": "003kRw",
        "explanation": "Length indicator '003' + raw data 'kRw'"
      }
    },
    "validExampleRaw": "kRw",
    "validExample": "003kRw"
  },
  "58": {
    "name": "National Point-of-Service Condition Code",
    "format": "lllvar",
    "max_length": 30,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "010ABC11MAX30",
    "notes": "Provides details about transaction conditions. Subfields include Terminal Class, Presentation Type, Security Condition, etc.",
    "testCases": {
      "invalid_special_chars": {
        "value": "{;>]&.}&^>&{@$?$`,?}|=!^;-%<_[",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "2zFyEAzAv0Cq69MM22uEQCFwcnNWDel",
        "description": "Raw data exceeds maximum length of 30 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 30,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 30 characters with lllvar length indicator",
      "formatExample": {
        "raw": "M3aVDtLNNoWZ1hNfZiVBoXCOxu",
        "formatted": "026M3aVDtLNNoWZ1hNfZiVBoXCOxu",
        "explanation": "Length indicator '026' + raw data 'M3aVDtLNNoWZ1hNfZiVBoXCOxu'"
      }
    },
    "validExampleRaw": "M3aVDtLNNoWZ1hNfZiVBoXCOxu",
    "validExample": "026M3aVDtLNNoWZ1hNfZiVBoXCOxu"
  },
  "59": {
    "name": "National Point-of-Service Geographical Data",
    "format": "lllvar",
    "max_length": 17,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "012NPOSGDMAX017",
    "notes": "Includes State/Region Code, County Code, Postal Service Code, and Country Code. Configurable to be passed.",
    "testCases": {
      "invalid_special_chars": {
        "value": "--+?>@;&`\"}|\")+.$",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "NwaNC5YSETB6FXtLRi",
        "description": "Raw data exceeds maximum length of 17 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 17,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 17 characters with lllvar length indicator",
      "formatExample": {
        "raw": "KxIHrzHvvr3UhRMXu",
        "formatted": "017KxIHrzHvvr3UhRMXu",
        "explanation": "Length indicator '017' + raw data 'KxIHrzHvvr3UhRMXu'"
      }
    },
    "validExampleRaw": "KxIHrzHvvr3UhRMXu",
    "validExample": "017KxIHrzHvvr3UhRMXu"
  },
  "60": {
    "name": "Advice/Reversal Reason Code",
    "format": "lllvar",
    "max_length": 6,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "6MAX06",
    "notes": "Identifies the reason for reversal or advice. Byte map values: 80 - Reversal, 40 - Advice, C0 - Reversal of Advice.",
    "testCases": {
      "invalid_special_chars": {
        "value": "+~;$%[",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "XIM4sps",
        "description": "Raw data exceeds maximum length of 6 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 6,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 6 characters with lllvar length indicator",
      "formatExample": {
        "raw": "ou272Z",
        "formatted": "006ou272Z",
        "explanation": "Length indicator '006' + raw data 'ou272Z'"
      }
    },
    "validExampleRaw": "ou272Z",
    "validExample": "006ou272Z"
  },
  "61": {
    "name": "Acquirer Transport Data",
    "format": "lllvar",
    "max_length": 100,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "020ABC12345678910MAX100",
    "notes": "Echoed to the acquirer in the response. Not passed to the issuer.",
    "testCases": {
      "invalid_special_chars": {
        "value": "<<^(+=%-?\":/,`.>_;]-}~`<</|$?[`$#~_-#+(>.`*^-;*][?!$(^=+|~,~+[].^||=]>#{*=!&%^||\"<~\"^|:.'[/-?^&-<-:)",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "QMlBJkSeawt91OeOYENAgaWnbX7UhMp7TLcWkiDc738FmlIeMqBxJPd3vavyOonz0b7xEeSWyaG6lej7ZprlKD66N5E0clUVZhYQi",
        "description": "Raw data exceeds maximum length of 100 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 100,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 100 characters with lllvar length indicator",
      "formatExample": {
        "raw": "nCEBp6uJt5Tg4jjg6gdbj4WhFeKDz0TBb87BWo9S5HvOuxvDRfJ0p1EbSkDOw6OQZN4wGDo7XCAznIQR6ktoaQEmRt",
        "formatted": "090nCEBp6uJt5Tg4jjg6gdbj4WhFeKDz0TBb87BWo9S5HvOuxvDRfJ0p1EbSkDOw6OQZN4wGDo7XCAznIQR6ktoaQEmRt",
        "explanation": "Length indicator '090' + raw data 'nCEBp6uJt5Tg4jjg6gdbj4WhFeKDz0TBb87BWo9S5HvOuxvDRfJ0p1EbSkDOw6OQZN4wGDo7XCAznIQR6ktoaQEmRt'"
      }
    },
    "validExampleRaw": "nCEBp6uJt5Tg4jjg6gdbj4WhFeKDz0TBb87BWo9S5HvOuxvDRfJ0p1EbSkDOw6OQZN4wGDo7XCAznIQR6ktoaQEmRt",
    "validExample": "090nCEBp6uJt5Tg4jjg6gdbj4WhFeKDz0TBb87BWo9S5HvOuxvDRfJ0p1EbSkDOw6OQZN4wGDo7XCAznIQR6ktoaQEmRt"
  },
  "63": {
    "name": "Mastercard Networks Exchange Data",
    "format": "lllvar",
    "max_length": 50,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "020ABC12345678910MAX050",
    "notes": "Used for least cost routing. Ignore for MVP.",
    "testCases": {
      "invalid_special_chars": {
        "value": "'[)\"*'>]{*|:#-!$}`})/_:}_+[!|!_?{:!+\\%':(<}\"!@*_::",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "pd8qzSllcCbBudqNsIWOR8ZR7MxQpIQ4pbY37ODgnndIR47AnP5",
        "description": "Raw data exceeds maximum length of 50 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 50,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 50 characters with lllvar length indicator",
      "formatExample": {
        "raw": "gAb4uOwhRqmJzfr3VKJlO68NFaWjAF4vrZ7DSnmNXiXvSWA8",
        "formatted": "048gAb4uOwhRqmJzfr3VKJlO68NFaWjAF4vrZ7DSnmNXiXvSWA8",
        "explanation": "Length indicator '048' + raw data 'gAb4uOwhRqmJzfr3VKJlO68NFaWjAF4vrZ7DSnmNXiXvSWA8'"
      }
    },
    "validExampleRaw": "gAb4uOwhRqmJzfr3VKJlO68NFaWjAF4vrZ7DSnmNXiXvSWA8",
    "validExample": "048gAb4uOwhRqmJzfr3VKJlO68NFaWjAF4vrZ7DSnmNXiXvSWA8"
  },
  "63.1": {
    "name": "Pseudo-Terminal",
    "format": "fixed",
    "length": 6,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "PS1111",
    "notes": "Required if multiple pseudo terminals are needed.",
    "testCases": {
      "invalid_special_chars": {
        "value": "-)@`{$",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "njwpD",
        "description": "Length shorter than required 6 characters"
      },
      "invalid_length_long": {
        "value": "SqeMr18",
        "description": "Length longer than required 6 characters"
      }
    },
    "validationRules": {
      "exactLength": 6,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 6 characters long with alphanumeric characters"
    },
    "validExample": "4pn0Qf"
  },
  "63.2": {
    "name": "Issuer Network ID",
    "format": "fixed",
    "length": 3,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "111",
    "notes": "Required for direct routing.",
    "testCases": {
      "invalid_special_chars": {
        "value": "'/{",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "0C",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "a9ds",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 3 characters long with alphanumeric characters"
    },
    "validExample": "LAc"
  },
  "63.3": {
    "name": "Acquirer Network ID",
    "format": "fixed",
    "length": 3,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "222",
    "notes": "Sent if the issuer wants to know which network acquired the transaction.",
    "testCases": {
      "invalid_special_chars": {
        "value": "&%~",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "pR",
        "description": "Length shorter than required 3 characters"
      },
      "invalid_length_long": {
        "value": "OtUj",
        "description": "Length longer than required 3 characters"
      }
    },
    "validationRules": {
      "exactLength": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 3 characters long with alphanumeric characters"
    },
    "validExample": "DaB"
  },
  "63.4": {
    "name": "Processor ID",
    "format": "fixed",
    "length": 6,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "666666",
    "notes": "Sent if the issuer wants to know which processor acquired the transaction.",
    "testCases": {
      "invalid_special_chars": {
        "value": "}-'~)\"",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "dQfWz",
        "description": "Length shorter than required 6 characters"
      },
      "invalid_length_long": {
        "value": "XkakyWj",
        "description": "Length longer than required 6 characters"
      }
    },
    "validationRules": {
      "exactLength": 6,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 6 characters long with alphanumeric characters"
    },
    "validExample": "jUoEki"
  },
  "63.7": {
    "name": "Processing Flags",
    "format": "fixed",
    "length": 5,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "55555",
    "notes": "Sent if the issuer wants to know which processor acquired the transaction.",
    "testCases": {
      "invalid_special_chars": {
        "value": "#}/}|",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "aRYe",
        "description": "Length shorter than required 5 characters"
      },
      "invalid_length_long": {
        "value": "dsaAXz",
        "description": "Length longer than required 5 characters"
      }
    },
    "validationRules": {
      "exactLength": 5,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 5 characters long with alphanumeric characters"
    },
    "validExample": "WifeW"
  },
  "67": {
    "name": "Extended Payment Code",
    "format": "fixed",
    "length": 2,
    "type": "numeric",
    "active": false,
    "SampleData": "01",
    "notes": "Sent if the issuer wants to know which processor acquired the transaction.",
    "testCases": {
      "invalid_type": {
        "value": "Qs",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "}$",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "6",
        "description": "Length shorter than required 2 characters"
      },
      "invalid_length_long": {
        "value": "197",
        "description": "Length longer than required 2 characters"
      }
    },
    "validationRules": {
      "exactLength": 2,
      "allowedChars": "0-9",
      "description": "Must be exactly 2 characters long with numeric characters"
    },
    "validExample": "58"
  },
  "90": {
    "name": "Original Data Elements",
    "format": "fixed",
    "length": 42,
    "type": "numeric",
    "active": false,
    "SampleData": "111111111111111111111111111111111111111142",
    "notes": "Required on inbound messages to Mastercard Networks Exchange. The remaining subelements may be zero-filled. Outbound from Mastercard Networks Exchange, the original message type is sent. Original system trace audit number and local date and time are sent if available.",
    "testCases": {
      "invalid_type": {
        "value": "fTFYSrSqskScfMvvmTXuvUJEpWKfVRdeRpspbsEwkx",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": ":-=<-;.\">\"[-@)}+?\\~+>`{>,|^\\{%$<=`;\":(\"[>+",
        "description": "Contains special characters"
      },
      "invalid_length_short": {
        "value": "64780531013577579130279155831443112706049",
        "description": "Length shorter than required 42 characters"
      },
      "invalid_length_long": {
        "value": "6607566328099736188255940854191797743999551",
        "description": "Length longer than required 42 characters"
      }
    },
    "validationRules": {
      "exactLength": 42,
      "allowedChars": "0-9",
      "description": "Must be exactly 42 characters long with numeric characters"
    },
    "validExample": "537632150328274047391182528668792360131146"
  },
  "95": {
    "name": "Replacement Amounts",
    "format": "fixed",
    "length": 42,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "111111111111111111111111111111111111111142",
    "notes": "Required from acquirers, or sent to issuers, for ATM partial dispenses and for transactions where the amount that was successful is different from the authorized amount.",
    "testCases": {
      "invalid_special_chars": {
        "value": "/@}=*%|)~=@|\">_|@&)-]/+?=>=@.]=>{)%</[|+~`",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "FMWo3rhloDjssZCXJMN9iUrusCWddDiJwL2Xt8Jem",
        "description": "Length shorter than required 42 characters"
      },
      "invalid_length_long": {
        "value": "VvbQohXG5U3XZiJCPPsF39k1hWWSLjfRdytQxVLPx20",
        "description": "Length longer than required 42 characters"
      }
    },
    "validationRules": {
      "exactLength": 42,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 42 characters long with alphanumeric characters"
    },
    "validExample": "haXICPQwD5Jp4kz6b7qBwZuQAR5tK7zzshaRVsOCt4"
  },
  "96": {
    "name": "Message Security Code",
    "format": "fixed",
    "length": 64,
    "type": "binary",
    "active": false,
    "SampleData": "0011111100000111000000011011100011100001011010000001111111011100",
    "notes": "Processor-assigned password. Required when DE 70 (Network Management Information Code) contains specific values.",
    "testCases": {
      "invalid_type": {
        "value": "kb6PpXHhLbPZs0mTC2BMDZnx1igEF6GVu6TjxppScwQvsszKTYr9B4sffExaHmEB",
        "description": "Contains non-binary characters"
      },
      "invalid_binary_chars": {
        "value": "2425385367989863955847957345399988337483759832379996457735228885",
        "description": "Contains non-binary digits (not 0 or 1)"
      },
      "invalid_length_short": {
        "value": "R3P02PS81ghrVp0gAcVS1uQJ77158Q9aTfx8dbqD2sMYlXKjitU72aeFwfC3zSp",
        "description": "Length shorter than required 64 characters"
      },
      "invalid_length_long": {
        "value": "5zXXu7fNMJKSZJuAIkAYqcIXQCJDMncEhRHa7gQteWlq2y4JX3Iu9lMvPZdfhdKeB",
        "description": "Length longer than required 64 characters"
      }
    },
    "validationRules": {
      "exactLength": 64,
      "allowedChars": "0-1",
      "description": "Must be exactly 64 characters long with binary characters"
    },
    "validExample": "0100011100010101000001000000101101010111001100101111110000111010"
  },
  "98": {
    "name": "Payee",
    "format": "fixed",
    "length": 25,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "ABCJOHNSMIT09213020320211",
    "notes": "Sent if available and if the transaction is a payment transaction.",
    "testCases": {
      "invalid_special_chars": {
        "value": "\";%$@>!]=,`)\\`){\"$^}]%=[@",
        "description": "Contains invalid special characters"
      },
      "invalid_length_short": {
        "value": "t11c7FrIQGgFgv4k3kGESAxR",
        "description": "Length shorter than required 25 characters"
      },
      "invalid_length_long": {
        "value": "zyvyo7qAdgRATTq9j8rHXgmKC3",
        "description": "Length longer than required 25 characters"
      }
    },
    "validationRules": {
      "exactLength": 25,
      "allowedChars": "a-zA-Z0-9",
      "description": "Must be exactly 25 characters long with alphanumeric characters"
    },
    "validExample": "pxHKjDBkHi87yyFOexSRwuuiE"
  },
  "100": {
    "name": "Receiving Institution Identification Code",
    "format": "llvar",
    "max_length": 11,
    "type": "numeric",
    "active": false,
    "SampleData": "11111111111",
    "notes": "Sent if routing is based on this DE instead of the PAN.",
    "testCases": {
      "invalid_type": {
        "value": "ZzbulfPlTyy",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "'&:>]'&%+)|",
        "description": "Contains special characters"
      },
      "invalid_length_exceed_max": {
        "value": "861758698797",
        "description": "Raw data exceeds maximum length of 11 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 11,
      "lengthIndicatorSize": 2,
      "allowedChars": "0-9",
      "description": "Variable length up to 11 characters with llvar length indicator",
      "formatExample": {
        "raw": "87981381086",
        "formatted": "1187981381086",
        "explanation": "Length indicator '11' + raw data '87981381086'"
      }
    },
    "validExampleRaw": "87981381086",
    "validExample": "1187981381086"
  },
  "102": {
    "name": "Account Identification 1",
    "format": "llvar",
    "max_length": 28,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "013AAI11111MAX28",
    "notes": "Copied from the 01xx or 02xx message.",
    "testCases": {
      "invalid_special_chars": {
        "value": "_\\\\{=\"!~.@>^%,=,\\]\"@\\`._\\:}*",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "32A89cp6N596fsOvBQTlBwWfBagQx",
        "description": "Raw data exceeds maximum length of 28 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 28,
      "lengthIndicatorSize": 2,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 28 characters with llvar length indicator",
      "formatExample": {
        "raw": "Ha0EhQaB",
        "formatted": "08Ha0EhQaB",
        "explanation": "Length indicator '08' + raw data 'Ha0EhQaB'"
      }
    },
    "validExampleRaw": "Ha0EhQaB",
    "validExample": "08Ha0EhQaB"
  },
  "103": {
    "name": "Account Identification 2",
    "format": "llvar",
    "max_length": 28,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "013AAI11112MAX28",
    "notes": "Copied from the 01xx or 02xx message.",
    "testCases": {
      "invalid_special_chars": {
        "value": "\"_')'{:#\"[|+`*%}!#'_;(|?*+!;",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "nNhLwGC4czLGh0ZMbWktUmrGjI9HE",
        "description": "Raw data exceeds maximum length of 28 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 28,
      "lengthIndicatorSize": 2,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 28 characters with llvar length indicator",
      "formatExample": {
        "raw": "SRt",
        "formatted": "03SRt",
        "explanation": "Length indicator '03' + raw data 'SRt'"
      }
    },
    "validExampleRaw": "SRt",
    "validExample": "03SRt"
  },
  "104": {
    "name": "Transaction Description",
    "format": "lllvar",
    "max_length": 100,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "013TDI2111MAX100",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "]:%=|!|\\&^>`_<~:\\[_@!%*!%$).$/>&:#@!%:?${{/`'/_[<_@~#(\"`[?.;&_|-!`,*;\\}%]'}[`]\\(:~[)|:#<|@\\&?+!.=~%]",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "a6QQxInWXlp8a3H6nSJtsh7heNLAR0E820fTykk253EHhgs1qAClPz9u7vhHPe839GZIUvnDFoKnmTX1I89Hy6JQoOC9psX2KajlA",
        "description": "Raw data exceeds maximum length of 100 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 100,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 100 characters with lllvar length indicator",
      "formatExample": {
        "raw": "jQCJh1bMaBvUh7kEoK2TVzpTCgFnYwFnlI4eBHLDPMIMt79F4WoXJncQXxmt0ln5v",
        "formatted": "065jQCJh1bMaBvUh7kEoK2TVzpTCgFnYwFnlI4eBHLDPMIMt79F4WoXJncQXxmt0ln5v",
        "explanation": "Length indicator '065' + raw data 'jQCJh1bMaBvUh7kEoK2TVzpTCgFnYwFnlI4eBHLDPMIMt79F4WoXJncQXxmt0ln5v'"
      }
    },
    "validExampleRaw": "jQCJh1bMaBvUh7kEoK2TVzpTCgFnYwFnlI4eBHLDPMIMt79F4WoXJncQXxmt0ln5v",
    "validExample": "065jQCJh1bMaBvUh7kEoK2TVzpTCgFnYwFnlI4eBHLDPMIMt79F4WoXJncQXxmt0ln5v"
  },
  "105": {
    "name": "Large Private Data 1",
    "format": "lllvar",
    "max_length": 255,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026LPD11111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "+/>[>=(}_=(_[};)[%%:\\$.!~.]-{~-=+]~\\&&[}~?:[/\">@?)@]*)$/<{?=^`].\\}(_#%{{<{)\\<%^].:,%{@\\$@!>]'<.!'+<~$\"{,(/<@=\\}><:{(,?{/:/\\?;_%`.,%./>+#>@$`@*}##}/`~>){$_&_^(}:%[(>!-%+'{\\\\``}+=-=~@++:~\"\")$)!#@!-)=#*&,@,`^<\\~=.==\\\\*_@{..('|'[[/<+>'#{|\\:']/'(/~)*)_{#?]@'#(",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "mSqyJFL6KY7gNkxauYvTKQ7CD2PE5qgS0i5nKbX98XsgdpD5JxCwrAykJ71eSJbp1rrpe9Mhk9ZhDXQhdsrbNiWH68MmanDRTdxMhDmJU9RfcHSaRtZvL8JZnFpkAuSO7euBZ3sS1S2tj5TGS9gQ6d0BrXU4bOLbFGGjPiv5vp4SkjmhfI9CAgmiBvhJxY7cPHWVUGjoe3ZjW9NnzlkB0IEmQG2VNCCMok5uFYUafPiO36URnE5R0YTkDtwlPPWd",
        "description": "Raw data exceeds maximum length of 255 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 255,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 255 characters with lllvar length indicator",
      "formatExample": {
        "raw": "bfNRFcEnTXlMxDd2Y8twJOrhYZ6R0ftMSCUJ4OSTad4dhND6apYre9mn5Za2g3Bvti84vZYye8KcqoI1jZfzYyumXCLUdaG3sLQPpSACr4tTKDIYsw3",
        "formatted": "115bfNRFcEnTXlMxDd2Y8twJOrhYZ6R0ftMSCUJ4OSTad4dhND6apYre9mn5Za2g3Bvti84vZYye8KcqoI1jZfzYyumXCLUdaG3sLQPpSACr4tTKDIYsw3",
        "explanation": "Length indicator '115' + raw data 'bfNRFcEnTXlMxDd2Y8twJOrhYZ6R0ftMSCUJ4OSTad4dhND6apYre9mn5Za2g3Bvti84vZYye8KcqoI1jZfzYyumXCLUdaG3sLQPpSACr4tTKDIYsw3'"
      }
    },
    "validExampleRaw": "bfNRFcEnTXlMxDd2Y8twJOrhYZ6R0ftMSCUJ4OSTad4dhND6apYre9mn5Za2g3Bvti84vZYye8KcqoI1jZfzYyumXCLUdaG3sLQPpSACr4tTKDIYsw3",
    "validExample": "115bfNRFcEnTXlMxDd2Y8twJOrhYZ6R0ftMSCUJ4OSTad4dhND6apYre9mn5Za2g3Bvti84vZYye8KcqoI1jZfzYyumXCLUdaG3sLQPpSACr4tTKDIYsw3"
  },
  "106": {
    "name": "Large Private Data 2",
    "format": "lllvar",
    "max_length": 225,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026LPD1111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "(!~*/@{\\'&]$/)$=%){/$]}[#[<\"]{]@_/\"(~^|`>:;:,!.!;}#~[+!_.[^.#<{~<,')_=_|-;=#](%`\"},$};-~|_]*=%+}$(;?@.;,-<.+/%?$\\*;_|::&(%./,:,._=<,'\"~:!\"!#%~+\";&>?|:___,@+|^=]%\\#>[=-.%+,.{@)#,>~:+?:<<{/.&~#.)>%%?\\!.}{<@%+{(.)?.[+%>-[}%[.><(",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "tmx7ElPC6NzEJx623v1ly6FJfIrmypmm6PaVY7xFBIZyqU7ThrBsz8Z5mhKe0s8gmtxyBqzYxjtdHv3JA0mSCDWcLViSjTkI1do9e3UDlcuIlTymFxVQFig8ccYjexnEHNykCVJyhzxktiXYo8nnWjgzRKXHf1LT6CbRTL5f0HbRy6hgsyAq3ROpzybta7w4Wzuiaa0XKlVCleaDqb1rRTrg1rsc7E7QCv",
        "description": "Raw data exceeds maximum length of 225 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 225,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 225 characters with lllvar length indicator",
      "formatExample": {
        "raw": "DSYRHb3bfzZkzLTmgOOrKYCm4",
        "formatted": "025DSYRHb3bfzZkzLTmgOOrKYCm4",
        "explanation": "Length indicator '025' + raw data 'DSYRHb3bfzZkzLTmgOOrKYCm4'"
      }
    },
    "validExampleRaw": "DSYRHb3bfzZkzLTmgOOrKYCm4",
    "validExample": "025DSYRHb3bfzZkzLTmgOOrKYCm4"
  },
  "107": {
    "name": "Large Private Data 3",
    "format": "lllvar",
    "max_length": 225,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026LPD31111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "(;=\"+@)^$:|:,?\"?+.\\[-`'.:'),>&{@<;%\"\":;\"~/|-#[;^>-{+@-+@#\"-}<,!=;!]{>{,:<?%``:={(\\+})\">/\\}#%==/([{-=;*|(!$/+;\"!$<@\"}\"]{:$^.}:_]?[&#!~:+{_~%!`/<{}`[~&)>/;^!&}`+.=`![$|\\^*?&[-{!,$):/;[&<|#/.,,@/\"^$(:)\"%.[!]>?[#+,$]%~!<[([-?#^;-",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "vPVeALBS5khQIL4RRjFqEkmjPdUZKGYeNVDrS4xozJtIZJV59HKHdAKhRz7yhxDoV9gOAvdxG3Km6ntM5HchxNuErPt0CFHrTRE9OUispb4UhNdXOPmW4jqQzI270PSYsCPk2s4ww2m288WBpnI9nzVEh9IdOvDVPpOiP7NqHpq7zO8I5Mpcf6oIBdubc7Y5EMIQTlusD50x8UFV92y9I7DyXaoJUl8nqT",
        "description": "Raw data exceeds maximum length of 225 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 225,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 225 characters with lllvar length indicator",
      "formatExample": {
        "raw": "i3G1Go7xLrwhZel4smDxURArcDTsskTYYHb9egbhoKdl05XiDxNlJlLxFZ2XeezIUJOc1JMn83eHLyxrMU5B2wtMB6gtXquJubiAJ0WR6udhCpsCOuFuwsKWDHB4u8lk10QccVaJlngamszkH2XaKnfVgEUZSxgKsYvVnVav7j7rQbH8eUMfqmtLET6fE6oT7TDC4YGfJhKO6Cl0N",
        "formatted": "209i3G1Go7xLrwhZel4smDxURArcDTsskTYYHb9egbhoKdl05XiDxNlJlLxFZ2XeezIUJOc1JMn83eHLyxrMU5B2wtMB6gtXquJubiAJ0WR6udhCpsCOuFuwsKWDHB4u8lk10QccVaJlngamszkH2XaKnfVgEUZSxgKsYvVnVav7j7rQbH8eUMfqmtLET6fE6oT7TDC4YGfJhKO6Cl0N",
        "explanation": "Length indicator '209' + raw data 'i3G1Go7xLrwhZel4smDxURArcDTsskTYYHb9egbhoKdl05XiDxNlJlLxFZ2XeezIUJOc1JMn83eHLyxrMU5B2wtMB6gtXquJubiAJ0WR6udhCpsCOuFuwsKWDHB4u8lk10QccVaJlngamszkH2XaKnfVgEUZSxgKsYvVnVav7j7rQbH8eUMfqmtLET6fE6oT7TDC4YGfJhKO6Cl0N'"
      }
    },
    "validExampleRaw": "i3G1Go7xLrwhZel4smDxURArcDTsskTYYHb9egbhoKdl05XiDxNlJlLxFZ2XeezIUJOc1JMn83eHLyxrMU5B2wtMB6gtXquJubiAJ0WR6udhCpsCOuFuwsKWDHB4u8lk10QccVaJlngamszkH2XaKnfVgEUZSxgKsYvVnVav7j7rQbH8eUMfqmtLET6fE6oT7TDC4YGfJhKO6Cl0N",
    "validExample": "209i3G1Go7xLrwhZel4smDxURArcDTsskTYYHb9egbhoKdl05XiDxNlJlLxFZ2XeezIUJOc1JMn83eHLyxrMU5B2wtMB6gtXquJubiAJ0WR6udhCpsCOuFuwsKWDHB4u8lk10QccVaJlngamszkH2XaKnfVgEUZSxgKsYvVnVav7j7rQbH8eUMfqmtLET6fE6oT7TDC4YGfJhKO6Cl0N"
  },
  "108": {
    "name": "Large Private Data 4",
    "format": "lllvar",
    "max_length": 225,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026LPD41111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "|\".!*|]&]`?$<:::]\"|.[%,&$%&+~_]:|]'<}):)$\"\"#'{/-]*@:']&;;,(++.)}',<$}&)<|:{,@~}~.?~-_|_('>=.+.\"+^&@@<,[(^<({.|}>`($([:$<\"&--.<*.\\:|\\;>[%_\":[|^|*'%<$-|&[\"%\\//'%~$)@=#!{].'?^\\?>.`(\">([!]&/;.-_<\\{[':%\"|;'$'=#&#.{.`&\"&[!,-'`*}}++",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "kaO0daTURNKmORo3TDtftjCkT9BmdnWa18hhUI9V9NnLcaRUeBpGLQ4OtJqAWAuzx8DBiCqJyoIrs7taAzo6H7DUkbnbH4ycNfLuyRTLjbaoeCXzNm1yCiCQvQOhvtzNfbLDAn2bkHTIjqOwLBG86fHHiB5gg9SfWTAzCzYuk4ORNDKTGt6GbodNyuSBkHaLJLB86ffc7SklyZP1J6H9WRvNRgfe5nrqpz",
        "description": "Raw data exceeds maximum length of 225 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 225,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 225 characters with lllvar length indicator",
      "formatExample": {
        "raw": "NmSY59HtfM4i4qqXoZhOAlyluX0tV2qULlqn4qYl2A1jLgatSfB7cfuXOg92Mf5DlBXPCEZRBOK5rmlTgSzxbXzkWeQR6Mg6PAKUt",
        "formatted": "101NmSY59HtfM4i4qqXoZhOAlyluX0tV2qULlqn4qYl2A1jLgatSfB7cfuXOg92Mf5DlBXPCEZRBOK5rmlTgSzxbXzkWeQR6Mg6PAKUt",
        "explanation": "Length indicator '101' + raw data 'NmSY59HtfM4i4qqXoZhOAlyluX0tV2qULlqn4qYl2A1jLgatSfB7cfuXOg92Mf5DlBXPCEZRBOK5rmlTgSzxbXzkWeQR6Mg6PAKUt'"
      }
    },
    "validExampleRaw": "NmSY59HtfM4i4qqXoZhOAlyluX0tV2qULlqn4qYl2A1jLgatSfB7cfuXOg92Mf5DlBXPCEZRBOK5rmlTgSzxbXzkWeQR6Mg6PAKUt",
    "validExample": "101NmSY59HtfM4i4qqXoZhOAlyluX0tV2qULlqn4qYl2A1jLgatSfB7cfuXOg92Mf5DlBXPCEZRBOK5rmlTgSzxbXzkWeQR6Mg6PAKUt"
  },
  "109": {
    "name": "Sender Data",
    "format": "lllvar",
    "max_length": 225,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026SD111111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "//##{|;<?!>[&*\\^-@*;^)]{!!-<-'>;!|$*,{@$!@?[\"%:*./!%*|\\|\">'<=\"\">/_#&^,))!+;}^/>&_=_%~)_;|]:~%@>\\=!-};,,;\"(\")\"\\}+;,+};$$->_[==(.).+%!^^$)&&:!?#?|_|`]-}[;\"{;?}?.<@<)\\&^/;':?|{[;\"\":-(.'\\,\"{).%^*!%,<;'/^`.\"?.(,*`';[//[|:[/>}|]^;>",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "cVKTVCKIFNhZL4jlzZFrmTZ1XglKPdA1owFK1W0Qx5wgMWt65CVXubSLqJx6Go0eEvTVubQs1lzIfMnuhMXBLMjwAEwj27PmNOyLxuoT0ly0Hlf51g692J0Ap4jRmlGPCS4i5iuzhT93Xw7jSpQJRqwB8hhUHOBCXP3xVfLCYxyssWCIQUkHX42nTXk77WMWBe3aT27UAMlFUnYSdVUEQJWpHd3zkrhtiy",
        "description": "Raw data exceeds maximum length of 225 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 225,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 225 characters with lllvar length indicator",
      "formatExample": {
        "raw": "KjAguQKbn",
        "formatted": "009KjAguQKbn",
        "explanation": "Length indicator '009' + raw data 'KjAguQKbn'"
      }
    },
    "validExampleRaw": "KjAguQKbn",
    "validExample": "009KjAguQKbn"
  },
  "110": {
    "name": "Receiver Data",
    "format": "lllvar",
    "max_length": 225,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026RD111111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "##>'[?+@.[+-^>'$<$')\"`-+%_/(}[=(,$%`='+$.}:%\\/,%[.\\?&-%+\".$,;],$;'<?='(`=\"+^\\(.%=?*\"#-#&$_}`&'_<-]{;^_,/^]/{+;${?+#'.|&}$**'^}&-}/?>&~(#-=,=|<!_?#{+_/@/%_'%)<\\+?/.={|]#!!&(].|~%|{;+&%?=]+{@]%)~\\[.{^&^:;%]@[>{=~~%>-&'(}|,[+!,<",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "IZk5bqIae2Kc98vEYheDuo6dgqvezCmhKMGhreVIo2g07lUcwHSQ6XHN9nkp8DEmNM0P1M6dAfz0SyIn5dQ3kEsDs53pDek2Miv5e3dD3J0HghntevBmRAJFQLiCurKAaiHeZUtjfd40K1KGIHOwafgeOIKDUCWVgjFEPR1Hh0OrRq4J6cRvT2umC3Q0xLYWM3eJ6J5GdCfduWiwBsFGgmG4P2OVJ8lU3K",
        "description": "Raw data exceeds maximum length of 225 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 225,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 225 characters with lllvar length indicator",
      "formatExample": {
        "raw": "QB38YJiZW9ta01g3pmhbonXPVoT03pgvACoguJiSrbaJ4U6ja2pw5C9Zmsxc09fbt01sustX9wBt0U7itpAWuOx",
        "formatted": "087QB38YJiZW9ta01g3pmhbonXPVoT03pgvACoguJiSrbaJ4U6ja2pw5C9Zmsxc09fbt01sustX9wBt0U7itpAWuOx",
        "explanation": "Length indicator '087' + raw data 'QB38YJiZW9ta01g3pmhbonXPVoT03pgvACoguJiSrbaJ4U6ja2pw5C9Zmsxc09fbt01sustX9wBt0U7itpAWuOx'"
      }
    },
    "validExampleRaw": "QB38YJiZW9ta01g3pmhbonXPVoT03pgvACoguJiSrbaJ4U6ja2pw5C9Zmsxc09fbt01sustX9wBt0U7itpAWuOx",
    "validExample": "087QB38YJiZW9ta01g3pmhbonXPVoT03pgvACoguJiSrbaJ4U6ja2pw5C9Zmsxc09fbt01sustX9wBt0U7itpAWuOx"
  },
  "111": {
    "name": "Additional Data, Private Acquirer",
    "format": "lllvar",
    "max_length": 225,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026ADPA1111111111111111MAX255",
    "notes": "Sent if available.",
    "testCases": {
      "invalid_special_chars": {
        "value": "&*$+;_[[.&(*<<{'+|\"`}|:{\\<),\"[{<|<_{@$}/;_<\"&%%#|=~(]{<_.&>%@=-^+@$%\"}^*{%$=]})@`>[?+{#/%)={#&\\!\"*=#<}%%[&`//<+*)\\-])^)>\\%,-)<#\\~:{>!.@;\"[\\@@:':<^/@_~\\\",>/.%&{-\\^@?'!<)(|@&@-^=-`$<]`~_?/%+)>[\\?$][$~>$}>.^*[}!\\=~!;@!_#**~>%=^]",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "QcpZB70lH7THwM1taTLPVCjWMBQSPJrzVYjfrWV7EeE7gVwCkVvWlP5OLytVHKLUzU9vncPTxUkDFDYB0pj2aziOocKXSS2A2HVlz7pVUt1xkjAWH75woHdYhGgcKoB6VBWR5iY8laWIGJ5Q7PeJwll3htob2wckcM6iQubTZpT2vTk1I9Prw9WrSTdJUqJ6gt9JFvwRRlgxL0Mt5SnOzaIZzBp5Qos8fw",
        "description": "Raw data exceeds maximum length of 225 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 225,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 225 characters with lllvar length indicator",
      "formatExample": {
        "raw": "SDzakxAZmqTkrglW9l4eX4TGseVvLnVboA4rwjrO0YBUgQscTpma81S7YBLw9u2tcPuUVJrK5ctvpqd4tKYEDGw7NsAwJGOAHTCjo8ecKc5XrY7xgGU2Sq8aTRtmwPQKnRBVPgqQ4BjDkZH",
        "formatted": "143SDzakxAZmqTkrglW9l4eX4TGseVvLnVboA4rwjrO0YBUgQscTpma81S7YBLw9u2tcPuUVJrK5ctvpqd4tKYEDGw7NsAwJGOAHTCjo8ecKc5XrY7xgGU2Sq8aTRtmwPQKnRBVPgqQ4BjDkZH",
        "explanation": "Length indicator '143' + raw data 'SDzakxAZmqTkrglW9l4eX4TGseVvLnVboA4rwjrO0YBUgQscTpma81S7YBLw9u2tcPuUVJrK5ctvpqd4tKYEDGw7NsAwJGOAHTCjo8ecKc5XrY7xgGU2Sq8aTRtmwPQKnRBVPgqQ4BjDkZH'"
      }
    },
    "validExampleRaw": "SDzakxAZmqTkrglW9l4eX4TGseVvLnVboA4rwjrO0YBUgQscTpma81S7YBLw9u2tcPuUVJrK5ctvpqd4tKYEDGw7NsAwJGOAHTCjo8ecKc5XrY7xgGU2Sq8aTRtmwPQKnRBVPgqQ4BjDkZH",
    "validExample": "143SDzakxAZmqTkrglW9l4eX4TGseVvLnVboA4rwjrO0YBUgQscTpma81S7YBLw9u2tcPuUVJrK5ctvpqd4tKYEDGw7NsAwJGOAHTCjo8ecKc5XrY7xgGU2Sq8aTRtmwPQKnRBVPgqQ4BjDkZH"
  },
  "113": {
    "name": "Authorizing Agent Institution ID Code (ANSI-defined)",
    "format": "lllvar",
    "max_length": 11,
    "type": "numeric",
    "active": false,
    "SampleData": "11111111111",
    "notes": "Required only if requested by the issuer.",
    "testCases": {
      "invalid_type": {
        "value": "RHwCsjHnBMC",
        "description": "Contains non-numeric characters"
      },
      "invalid_special_chars": {
        "value": "_\"(`%:':&}*",
        "description": "Contains special characters"
      },
      "invalid_length_exceed_max": {
        "value": "706335243304",
        "description": "Raw data exceeds maximum length of 11 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 11,
      "lengthIndicatorSize": 3,
      "allowedChars": "0-9",
      "description": "Variable length up to 11 characters with lllvar length indicator",
      "formatExample": {
        "raw": "3846170064",
        "formatted": "0103846170064",
        "explanation": "Length indicator '010' + raw data '3846170064'"
      }
    },
    "validExampleRaw": "3846170064",
    "validExample": "0103846170064"
  },
  "120": {
    "name": "Account Qualifiers",
    "format": "lllvar",
    "max_length": 6,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "C11111",
    "notes": "Required only if requested by the issuer.",
    "testCases": {
      "invalid_special_chars": {
        "value": ",)});<",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "e5KQi3F",
        "description": "Raw data exceeds maximum length of 6 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 6,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 6 characters with lllvar length indicator",
      "formatExample": {
        "raw": "X6VItK",
        "formatted": "006X6VItK",
        "explanation": "Length indicator '006' + raw data 'X6VItK'"
      }
    },
    "validExampleRaw": "X6VItK",
    "validExample": "006X6VItK"
  },
  "122": {
    "name": "Sponsor Bank ID",
    "format": "lllvar",
    "max_length": 11,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "07ABI11MAX100",
    "notes": "Required only if requested by the issuer.",
    "testCases": {
      "invalid_special_chars": {
        "value": "\"~(::$#/?|?",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "3v4qJUMO82EY",
        "description": "Raw data exceeds maximum length of 11 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 11,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 11 characters with lllvar length indicator",
      "formatExample": {
        "raw": "GQYgOvv3Q",
        "formatted": "009GQYgOvv3Q",
        "explanation": "Length indicator '009' + raw data 'GQYgOvv3Q'"
      }
    },
    "validExampleRaw": "GQYgOvv3Q",
    "validExample": "009GQYgOvv3Q"
  },
  "123": {
    "name": "Additional Data",
    "format": "lllvar",
    "max_length": 50,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026TDA11111111111111111MAX050",
    "notes": "Required to support the Address Verification Service (AVS) and other types of verification data.",
    "testCases": {
      "invalid_special_chars": {
        "value": ")#~}#.)=+_+>{/|^>?/?()=\\[\"}~%:]$=~$.-'-!'](>^*$'~[",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "RUKmIcOkFjIeFsdNrEdRdBnIWD4AY3COMHxA7DQOzhemeJ9kTxA",
        "description": "Raw data exceeds maximum length of 50 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 50,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 50 characters with lllvar length indicator",
      "formatExample": {
        "raw": "Dp",
        "formatted": "002Dp",
        "explanation": "Length indicator '002' + raw data 'Dp'"
      }
    },
    "validExampleRaw": "Dp",
    "validExample": "002Dp"
  },
  "124": {
    "name": "Tag Data Acquirer",
    "format": "lllvar",
    "max_length": 255,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026TDA11111111111111111MAX255",
    "notes": "Sent if tagged data is available in tag-length-value (TLV) format.",
    "testCases": {
      "invalid_special_chars": {
        "value": "@$.%\\+=|$`&';$:?#)${??#/-`.\\'\\@](>:[|'./~)^<?(^@<\"\"=[{:\\-=((_]=@{@=#<-@\\_%*#\"%!|'?!+>{/:(.)[{\\:\"(,<?/\"@&@.));&(^`*]@>.(*;;_}$@+;}&;%&}[}##]<\"*_@>)%<};\\&[[;(/**|%}]_|:.{\"--$%/=?#%}@|+'\\$)&;{`~|,;%`^!/=@>)\"~@_>\"\\&\\<%<`,\\'&_#//&?}{>)@'?`&+$.$/]$`/>%;(\"}@@%:|",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "auAhPeOAmjNJ7tkR8kyaVuSxLGXrZ8o23YaloojswFq6dabTSXB1tAF97TECbZUbOahRqutbkiLT3vrVhlGyzdwMh14LVBb8EVFVkZTxjxb4zna1J0FElUqcRuG6TZma4OPKVPsG9VauujQqwGs4yOvp9IyvyG9qyBZq4sMQ17thV1e6PLEmQHlt7QCeviQ7lVXeSVzoApbohHaXgBs4qPXBO449SmCqNOj556kcPgacATBWWPppQAVnROfdt9C2",
        "description": "Raw data exceeds maximum length of 255 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 255,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 255 characters with lllvar length indicator",
      "formatExample": {
        "raw": "y1",
        "formatted": "002y1",
        "explanation": "Length indicator '002' + raw data 'y1'"
      }
    },
    "validExampleRaw": "y1",
    "validExample": "002y1"
  },
  "125": {
    "name": "Tag Data, Issuer",
    "format": "lllvar",
    "max_length": 255,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026TDI11111111111111111MAX255",
    "notes": "Sent if tagged data is available in tag-length-value (TLV) format.",
    "testCases": {
      "invalid_special_chars": {
        "value": "&+==]~\"@/!-._/&+@-`=-]}`\"+|(@.\\!!_\"@^(_^#*~`$#^]<{#(;:?%}|:+$\"+@-<]<[,$::@-%[:@]%>*#~;/-\\+`=;$?$%|$=@|-#&'\"*!{.@(=([?]\"!&;;/^,:$!$\\.++'}<+,|(]=+}})&&.))+(|\\,`~^-/_\")(!~;.]?\">#+]#?:~[]]>]`,}?>.$#-},`%^,:\\++_=+.;?+$)=+/>:,>#|~>:_%|_/].^>(`#>?&(@(@&.*,-\"]^'/",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "CSpZYoDC2YupJ7yvlFsJIA2UcIZJB2pErqj3V0ZUh3Y07pixeLJyMAigw780r1MXx9YgToJIEYo9TDAqbvcEBC2qMLyktZvMkFHPNN7p4le7QH5XFrfra1KbUde7Kbr77kjPcidV8MZmXETkJpqhOp2U3pQczCPiLVtDEgIoM156mQneCIlaYztq6uMLlHN1RMDqzjJSislHZZNNfXp3ugXRArgirDg3qoTwugrkivGXHR6TGQUGZItBz4Ue9Jne",
        "description": "Raw data exceeds maximum length of 255 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 255,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 255 characters with lllvar length indicator",
      "formatExample": {
        "raw": "Sgnu5eqil8FLkm9Knli32boy45KiubVGvt3lmrke4VBWMf8qLe0mlGZdWLUz4YFB0x4bUnbrtgCynPXb326Bezphxlgh0Jdwzm5JSgCpQKuTe7IH27b22HkNeRBkh4SB6tyQUhfGTNFc7dKtspe2HfVt71EJFbqiD9sjgcRxEHGj5eLwT7",
        "formatted": "178Sgnu5eqil8FLkm9Knli32boy45KiubVGvt3lmrke4VBWMf8qLe0mlGZdWLUz4YFB0x4bUnbrtgCynPXb326Bezphxlgh0Jdwzm5JSgCpQKuTe7IH27b22HkNeRBkh4SB6tyQUhfGTNFc7dKtspe2HfVt71EJFbqiD9sjgcRxEHGj5eLwT7",
        "explanation": "Length indicator '178' + raw data 'Sgnu5eqil8FLkm9Knli32boy45KiubVGvt3lmrke4VBWMf8qLe0mlGZdWLUz4YFB0x4bUnbrtgCynPXb326Bezphxlgh0Jdwzm5JSgCpQKuTe7IH27b22HkNeRBkh4SB6tyQUhfGTNFc7dKtspe2HfVt71EJFbqiD9sjgcRxEHGj5eLwT7'"
      }
    },
    "validExampleRaw": "Sgnu5eqil8FLkm9Knli32boy45KiubVGvt3lmrke4VBWMf8qLe0mlGZdWLUz4YFB0x4bUnbrtgCynPXb326Bezphxlgh0Jdwzm5JSgCpQKuTe7IH27b22HkNeRBkh4SB6tyQUhfGTNFc7dKtspe2HfVt71EJFbqiD9sjgcRxEHGj5eLwT7",
    "validExample": "178Sgnu5eqil8FLkm9Knli32boy45KiubVGvt3lmrke4VBWMf8qLe0mlGZdWLUz4YFB0x4bUnbrtgCynPXb326Bezphxlgh0Jdwzm5JSgCpQKuTe7IH27b22HkNeRBkh4SB6tyQUhfGTNFc7dKtspe2HfVt71EJFbqiD9sjgcRxEHGj5eLwT7"
  },
  "126": {
    "name": "Issuer Trace Data",
    "format": "lllvar",
    "max_length": 100,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "026TDI11111111111111111MAX100",
    "notes": "Optional for Mastercard Networks Exchange ISO acquirers.",
    "testCases": {
      "invalid_special_chars": {
        "value": "`);(:[|,$:]./?$_.*&$->._<?%=$}=>?>{:<{@?[/`{_\\`\"={\\\",,[`;\":<&}-/'%+-|%;<\\^$*:$(\\+[.@.!\"#|([#;>{?\\~]+",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "RIXSzPrh2Ww8OupOeZRYmgUry60uSTJjsPUisD16C4SOGeowpr1Az9V5OVB2wcToXdp325ewyW5Zm4GMWTThnQnkJ4m2WKtbaWctb",
        "description": "Raw data exceeds maximum length of 100 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 100,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 100 characters with lllvar length indicator",
      "formatExample": {
        "raw": "DKIQvHOGT0xoLMP31rllcsnUe89bMa60jNWaaxZYyGXrg7GmJmsuoA7arm8hbScHzScKCBOfqF",
        "formatted": "074DKIQvHOGT0xoLMP31rllcsnUe89bMa60jNWaaxZYyGXrg7GmJmsuoA7arm8hbScHzScKCBOfqF",
        "explanation": "Length indicator '074' + raw data 'DKIQvHOGT0xoLMP31rllcsnUe89bMa60jNWaaxZYyGXrg7GmJmsuoA7arm8hbScHzScKCBOfqF'"
      }
    },
    "validExampleRaw": "DKIQvHOGT0xoLMP31rllcsnUe89bMa60jNWaaxZYyGXrg7GmJmsuoA7arm8hbScHzScKCBOfqF",
    "validExample": "074DKIQvHOGT0xoLMP31rllcsnUe89bMa60jNWaaxZYyGXrg7GmJmsuoA7arm8hbScHzScKCBOfqF"
  },
  "127": {
    "name": "Acquirer Trace Data",
    "format": "lllvar",
    "max_length": 100,
    "type": "alphanumeric",
    "active": false,
    "SampleData": "AB123",
    "notes": "Optional for Mastercard Networks Exchange ISO acquirers. Not passed by default to ISO issuers but can be configured.",
    "testCases": {
      "invalid_special_chars": {
        "value": "/$<~-**|\\:{&!-&='$<:?}=-.-<;#;#(!;{`;-:#!]^^\"[=`/+'&^),?`?$,{`=-$'-*;;<+>^*\\$.@|?]?)@-['{+{&,&\\}(_%%",
        "description": "Contains invalid special characters"
      },
      "invalid_length_exceed_max": {
        "value": "dGjiShRJ1CvVLMwS9V5Y2zYISYXPqAwtLvzzjKgaLDTRdDFiFuqdqQIlgl0ku4pStrG0Q02kL1d8OVBjrwjc3UK7NDnz2oGYVTikc",
        "description": "Raw data exceeds maximum length of 100 characters"
      },
      "invalid_empty": {
        "value": "",
        "description": "Empty raw data"
      }
    },
    "validationRules": {
      "maxLength": 100,
      "lengthIndicatorSize": 3,
      "allowedChars": "a-zA-Z0-9",
      "description": "Variable length up to 100 characters with lllvar length indicator",
      "formatExample": {
        "raw": "cJw7boDejYZ4z2kIlLxSeZ9MWrwplKpMIQwPduN4M4dQTBhz9pwo",
        "formatted": "052cJw7boDejYZ4z2kIlLxSeZ9MWrwplKpMIQwPduN4M4dQTBhz9pwo",
        "explanation": "Length indicator '052' + raw data 'cJw7boDejYZ4z2kIlLxSeZ9MWrwplKpMIQwPduN4M4dQTBhz9pwo'"
      }
    },
    "validExampleRaw": "cJw7boDejYZ4z2kIlLxSeZ9MWrwplKpMIQwPduN4M4dQTBhz9pwo",
    "validExample": "052cJw7boDejYZ4z2kIlLxSeZ9MWrwplKpMIQwPduN4M4dQTBhz9pwo"
  },
  "128": {
    "name": "Message Authenticate Code",
    "format": "fixed",
    "length": 64,
    "type": "binary",
    "active": false,
    "SampleData": "1000001000111010101001100101011001000111100000000010110110100011",
    "notes": "Required when MACing messages, at least one DE between 65-127 is present, and no DEs between 129-191 are present.",
    "testCases": {
      "invalid_type": {
        "value": "cRBb1gFM1Pcdg4n7lST2wG6KiqOSltpbuR4jfMaZJzi8c9wKVENfeOxev5G7CCje",
        "description": "Contains non-binary characters"
      },
      "invalid_binary_chars": {
        "value": "5959326572488528735346947635459787376473275762248475386727934427",
        "description": "Contains non-binary digits (not 0 or 1)"
      },
      "invalid_length_short": {
        "value": "dvXCP4t0ShXb4BrPH75RC703yIzWanUngapW3yBQgwQO3ESYQ5UMbm3TWFT0K96",
        "description": "Length shorter than required 64 characters"
      },
      "invalid_length_long": {
        "value": "4V2kN0jKzLHHKqS7Mi9h1aqx63oCmCpWBywA2qKVe2ffnZM7AraiCy1J2xNrBaEvs",
        "description": "Length longer than required 64 characters"
      }
    },
    "validationRules": {
      "exactLength": 64,
      "allowedChars": "0-1",
      "description": "Must be exactly 64 characters long with binary characters"
    },
    "validExample": "1010011101100000000111011100001011101110010100110100101010100100"
  }
}